{"version":3,"sources":["assets/images/bgImg.jpg","assets/images/ethereum.png","components/Copyright.js","utils/Aes.js","utils/Tools.js","components/OpenWalletView.js","OpenWallet.js","components/PasswordView.js","components/CreateWalletView.js","CreateWallet.js","components/MnemonicView.js","Mnemonic.js","components/ImportWalletView.js","ImportWallet.js","components/AccountMenu.js","components/Toolbar.js","components/ListItems.js","components/MyDrawer.js","utils/networks.js","components/TxList.js","components/Deposit.js","components/Send.js","components/AssetDetail.js","Wallet.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","aesEncrypt","word","key","_word","CryptoJS","enc","Utf8","parse","_key","AES","encrypt","mode","ECB","padding","pad","Pkcs7","toString","aesDecrypt","decrypt","stringify","sha1","password","SHA1","bip39","require","HDWallet","mnemonicToAddress","mnemonic","n","hdwallet","fromMnemonic","derive","getAddress","mnemonicToPrivate","getPrivateKey","validateMnemonic","RegExp","test","replace","wordlists","english","split","join","chinese_simplified","randMnemonic","newArr","len","length","i","index","Math","floor","random","push","splice","getAccounts","accounts","address","balance","getTxList","networkName","a","async","ethapi","init","account","txlist","txlist_","result","reverse","to","inputData","input","value","round","gasFee","gasUsed","gasPrice","console","log","gasLimit","useStyles","makeStyles","theme","root","height","image","backgroundImage","bgImg","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","OpenWalletView","classes","React","useState","remember","setRemember","setPassword","error","errorMsg","errorState","setError","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","name","label","id","autoComplete","onChange","event","target","FormHelperText","FormControlLabel","control","Checkbox","checked","Button","onClick","localStorage","getItem","days","expires","setDate","now","cookie","save","path","window","location","RouterLink","Box","mt","OpenWallet","props","state","Component","Password","setPasswd","confirmPassword","setconfirmPassword","passwordError","passwordStatus","setPasswordStatus","style","paddingBottom","multiline","level","arr","array","indexOf","checkPasswordLevel","Wallet","action","marginBottom","CardContent","minHeight","fontSize","lineHeight","cursor","float","textAlign","CardContent_en","fontWeight","CardActions","fontStyle","CardActionsError","card","minWidth","CardError","borderColor","borderWidth","borderStyle","wordPaper_zh","justifyContent","flexWrap","wordPaper_en","paddingTop","CreateWalletView","mnemonic_lang","useMnemonic","wordDisplay","setWordDisplay","setMnemonic","choseWord","attributes","nodeValue","innerHTML","removeWord","j","setCardActionsError","Container","maxWidth","map","justify","CreateWallet","setItem","important","this","copyButton","letterSpacing","wordSpacing","TabPanel","children","other","role","hidden","aria-labelledby","p","a11yProps","MnemonicView","useTheme","mnemonic_zh","mnemonic_en","setValue","mnemonicState","setMnemonicState","useEffect","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","text","size","startIcon","pathname","Mnemonic","generateMnemonic","switchLang","title","ImportWalletView","mnemonicErrorState","setMnemonicError","rows","document","ImportWallet","right","position","border","menu","background","opacity","divider","firstItem","itemicon","AccountMenu","anchorEl","setAnchorEl","handleClose","currentAccount","choseAccount","setAccounts","IconButton","aria-haspopup","aria-controls","currentTarget","diameter","seed","jsNumberForAddress","open","Boolean","onClose","TransitionComponent","Fade","MenuItem","Divider","ListItemIcon","noWrap","toolbar","paddingRight","formControl","borderRadius","marginLeft","top","left","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","MenuProps","PaperProps","MyToolbar","networks","networkId","setNetworkId","AppBar","Toolbar","edge","aria-label","toggleDrawer","menuButton","FormControl","Select","disableUnderline","select","displayEmpty","defaultValue","getBalance","menuitem","nameCN","mainListItems","ListItem","button","ListItemText","primary","ListSubheader","inset","mixins","h1","list","MyDrawer","SwipeableDrawer","onOpen","onKeyDown","List","nameEN","inline","mainItem","topItem","listItem","status","success","contrastText","statusError","listItemRight","TxList","nonce","moment","parseInt","timeStamp","format","ListItemAvatar","isError","QRCode","Transition","forwardRef","ref","Slide","DialogTitle","overflowY","DialogActions","Deposit","handleDepositClose","setDepositOpen","depositOpen","Dialog","keepMounted","aria-describedby","DialogContent","DialogContentText","selectGasfee","noPadding","addressList","Send","sendOpen","sendValue","setSendValue","setVariant","gasfee","setGasfee","infuraProvider","ethers","providers","InfuraProvider","getGasPrice","utils","formatEther","getGasfee","then","res","parseFloat","setMyGasfee","setTotleAmount","myGasfee","handleChoseGasfee","toAddress","setToAddress","tabValue","setTabValue","handleChangeTab","handleSendClose","isEthereumAddress","handleAddressHelper","handleActionBtn","privateKey","wallet","getCode","Error","bigNumberify","sendTransaction","tx","helperText","addressHelper","setAddressHelper","txt","actionBtn","setActionBtn","totleAmount","setSendOpen","disabled","InputProps","endAdornment","InputAdornment","ButtonGroup","boxShadow","content","flexGrow","overflow","appBarSpacer","avatarBg","sendBtn","paddingLeft","MyButton","AssetDetail","src","ethereum","setState","that","balanceBN","e","accountsIndex","load","validatePasswordMnemonic","avatarMenu","nextProps","nextState","App","info","basename","exact","prevProps","prevState","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","createMuiTheme","light","dark","default","Warning","typography","fontFamily","ReactDOM","render","ThemeProvider","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c7d22cce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgImg.b6c409a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ethereum.1909e591.png\";","\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import CryptoJS from 'crypto-js'\r\n\r\nexport function aesEncrypt(word, key) {\r\n    let _word = CryptoJS.enc.Utf8.parse(word)\r\n    let _key = CryptoJS.enc.Utf8.parse(key)\r\n    let encrypted = CryptoJS.AES.encrypt(_word, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n    return encrypted.toString()\r\n}\r\nexport function aesDecrypt(encrypt, key) {\r\n    let _key = CryptoJS.enc.Utf8.parse(key)\r\n    let decrypt = CryptoJS.AES.decrypt(encrypt, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n    return CryptoJS.enc.Utf8.stringify(decrypt).toString()\r\n}\r\n\r\nexport function sha1(password) {\r\n    return CryptoJS.SHA1(password)\r\n}","import { aesDecrypt } from './Aes'\r\nimport {ethers} from 'ethers'\r\nvar bip39 = require('bip39')\r\nconst HDWallet = require('ethereum-hdwallet')\r\n\r\nexport function mnemonicToAddress(mnemonic, n) {\r\n    const hdwallet = HDWallet.fromMnemonic(mnemonic)\r\n    return `0x${hdwallet.derive(`m/44'/60'/0'/0/` + n).getAddress().toString('hex')}`\r\n}\r\nexport function mnemonicToPrivate(mnemonic, n) {\r\n    const hdwallet = HDWallet.fromMnemonic(mnemonic)\r\n    return hdwallet.derive(`m/44'/60'/0'/0/` + n).getPrivateKey().toString('hex')\r\n}\r\nexport function jsNumberForAddress(address) {\r\n    const addr = address.slice(2, 10)\r\n    const seed = parseInt(addr, 16)\r\n    return seed\r\n}\r\n\r\nexport function lngDetector(word) {\r\n    var regex = new RegExp(\"^([a-z]{0,200})$\")\r\n    return regex.test(word.replace(/ /g, ''))\r\n}\r\n\r\nexport function validateMnemonic(mnemonic) {\r\n    if (lngDetector(mnemonic)) {\r\n        return bip39.validateMnemonic(mnemonic, bip39.wordlists.english)\r\n    } else {\r\n        return bip39.validateMnemonic(mnemonic.replace(/ /g, '').split('').join(' '), bip39.wordlists.chinese_simplified)\r\n    }\r\n}\r\n\r\nexport function randMnemonic(mnemonic) {\r\n    let randMnemonic = mnemonic.split(' ')\r\n    let newArr = []\r\n    let len = randMnemonic.length\r\n    for (var i = 0; i < len; i++) {\r\n        let index = Math.floor(Math.random() * randMnemonic.length)\r\n        newArr.push(randMnemonic[index])\r\n        randMnemonic.splice(index, 1)\r\n    }\r\n    randMnemonic = [...newArr, ...randMnemonic]\r\n    return randMnemonic\r\n}\r\nexport function validatePasswordMnemonic(password,encrypt) {\r\n    if (!password || !encrypt) {\r\n        console.log(\"encrypt || password Error!\")\r\n        return false\r\n    } else {\r\n        let mnemonic = aesDecrypt(encrypt, password)\r\n        console.log('mnemonic:' + mnemonic)\r\n        var bool = validateMnemonic(mnemonic)\r\n        if (!bool) {\r\n            console.log(\"Mnemonic Error!\")\r\n            return false\r\n        }else{\r\n            return mnemonic\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAccounts(mnemonic){\r\n    const accounts = []\r\n    for (let i = 0; i < 10; i++) {\r\n        accounts[i] = {\r\n            address : mnemonicToAddress(mnemonic, i),\r\n            balance : 0\r\n        }\r\n    }\r\n    return accounts\r\n}\r\nexport async function getTxList(networkName,address){\r\n    const ethapi = require('etherscan-api-cn').init('MIQDQDRUD5XENBPYQ8HAB3GJP2Z6T8ZZ1J',networkName,3000)\r\n    try{\r\n        let txlist_ = await ethapi.account.txlist(address,5000000, 'latest')\r\n        let txlist = txlist_.result.reverse()\r\n        \r\n        if(txlist.length>0){\r\n            for(var i=0;i<txlist.length;i++){\r\n                if(txlist[i].to === ''){\r\n                    txlist[i].inputData = '部署合约'\r\n                }else if(txlist[i].to === address){\r\n                    txlist[i].inputData = '存入'\r\n                }else {\r\n                    if(txlist[i].input === '0x'){\r\n                        txlist[i].inputData = '发送'\r\n                        txlist[i].value = txlist[i].value * -1\r\n                    }else{\r\n                        txlist[i].inputData = '合约调用'\r\n                        txlist[i].value = txlist[i].value > 0 ? txlist[i].value * -1 : txlist[i].value\r\n                    }\r\n                }\r\n                txlist[i].value = Math.round(txlist[i].value/100000000000000) / 10000 + `ETH`\r\n                txlist[i].gasFee=Math.round((txlist[i].gasUsed * txlist[i].gasPrice / 1000000000000000000)*100000)/100000\r\n            }\r\n            return txlist\r\n        }else{\r\n            return []\r\n        }\r\n    }catch(e){\r\n        console.log(\"TCL: getTxList -> e\", e)\r\n        return []\r\n    }\r\n}\r\nconst gasLimit = 21000\r\nexport async function getGasfee(networkName){\r\n    let infuraProvider = new ethers.providers.InfuraProvider(networkName)\r\n    let gasPrice = await infuraProvider.getGasPrice()\r\n    return ethers.utils.formatEther(gasPrice)*gasLimit\r\n}\r\nexport async function sendTransaction(to,networkName,mnemonic,currentAccount,value,myGasfee){\r\n    let infuraProvider = new ethers.providers.InfuraProvider(networkName)\r\n    let privateKey = mnemonicToPrivate(mnemonic,currentAccount)\r\n    let wallet = new ethers.Wallet(privateKey, infuraProvider)\r\n    let code = await infuraProvider.getCode(to)\r\n    if (code !== '0x') { throw new Error('目标地址不能是合约地址')}\r\n    \r\n    console.log(\"TCL: senTransaction -> myGasfee\", myGasfee*1000000000000000000 / gasLimit)\r\n    let gasPrice = ethers.utils.bigNumberify(myGasfee*1000000000000000000 / gasLimit)\r\n\r\n    let tx = await wallet.sendTransaction({\r\n        gasLimit: gasLimit,\r\n        gasPrice: gasPrice,\r\n        to: to,\r\n        value: ethers.utils.bigNumberify(value*1000000000000000000)\r\n    })\r\n    return tx\r\n}\r\nexport async function getBalance(mnemonic,networkName){\r\n    let accounts = []\r\n    let infuraProvider = new ethers.providers.InfuraProvider(networkName)\r\n    for (let i = 0; i < 10; i++) {\r\n        let address = mnemonicToAddress(mnemonic, i)\r\n        let balanceBN = await infuraProvider.getBalance(address)\r\n        let balance = ethers.utils.formatEther(balanceBN)\r\n        accounts[i] = {\r\n            address: address,\r\n            balance: balance\r\n        }\r\n    }\r\n    return accounts\r\n}","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Copyright from \"./Copyright\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport bgImg from '../assets/images/bgImg.jpg'\nimport cookie from 'react-cookies'\nimport { aesDecrypt, sha1 } from '../utils/Aes'\nimport { validateMnemonic } from '../utils/Tools'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(' + bgImg + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function OpenWalletView() {\n    const classes = useStyles()\n    console.log(\"Render OpenWalletView\")\n\n    const [remember, setRemember] = React.useState(false)\n    const changeRemember = event => {\n        setRemember(event.target.checked)\n    }\n\n    const [password, setPassword] = React.useState('')\n    const typePassword = event => {\n        setPassword(event.target.value)\n    }\n\n    const [errorState, setError] = React.useState({ error: false, errorMsg: '' })\n    const unlockWallet = () => {\n        if (password === '') {\n            setError({ error: true, errorMsg: '请输入密码' })\n        } else {\n            let encrypt = localStorage.getItem(\"encrypt\")\n            if (!encrypt) {\n                setError({ error: true, errorMsg: '找不到本地钱包，请导入或创建钱包' })\n            } else {\n                var mnemonic = aesDecrypt(encrypt, sha1(password))\n                var bool = validateMnemonic(mnemonic)\n                if (!bool) {\n                    setError({ error: true, errorMsg: '密码或钱包错误，请导入或创建钱包' })\n                } else {\n                    var days = remember ? 7 : 1\n                    const expires = new Date()\n                    expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * days)\n                    cookie.save('password', sha1(password).toString(), { path: '/', expires: expires })\n                    window.location.href = \"./Wallet\"\n                }\n            }\n        }\n    }\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        打开钱包\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"密码\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={typePassword}\n                            value={password}\n                            error={errorState.error}\n                        />\n                        <FormHelperText id=\"component-error-text\" error={errorState.error}>{errorState.errorMsg}</FormHelperText>\n                        <FormControlLabel\n                            control={<Checkbox value={remember} checked={remember} onChange={changeRemember} color=\"primary\" />}\n                            label=\"记住密码\"\n                        />\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={unlockWallet}\n                        >\n                            打开\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link to=\"/ImportWallet\" component={RouterLink} variant=\"body2\">\n                                    导入钱包\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link to=\"/Mnemonic\" component={RouterLink} variant=\"body2\">\n                                    创建钱包\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport OpenWalletView from './components/OpenWalletView'\n\nclass OpenWallet extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {  }\n    }\n    render() {\n        console.log(\"Render OpenWallet\")\n        return (\n            <OpenWalletView></OpenWalletView>\n        )\n    }\n}\n\nexport default OpenWallet\n","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function Password(props) {\r\n    console.log(\"Render Password\")\r\n    const checkPasswordLevel = (value, level) => {\r\n        // 0： 表示第一个级别 1：表示第二个级别 2：表示第三个级别\r\n        // 3： 表示第四个级别 4：表示第五个级别\r\n        var arr = [], array = [1, 2, 3, 4];\r\n        if (value.length < 8 || value.length > 20) {//最初级别\r\n            return 0;\r\n        }\r\n        if (/\\d/.test(value)) {//如果用户输入的密码 包含了数字\r\n            arr.push(1);\r\n        }\r\n        if (/[a-z]/.test(value)) {//如果用户输入的密码 包含了小写的a到z\r\n            arr.push(2);\r\n        }\r\n        if (/[A-Z]/.test(value)) {//如果用户输入的密码 包含了大写的A到Z\r\n            arr.push(3);\r\n        }\r\n        if (/\\W/.test(value)) {//如果是非数字 字母 下划线\r\n            arr.push(4);\r\n        }\r\n        for (var i = 0; i < level; i++) {\r\n            if (arr.indexOf(array[i]) === -1) {\r\n                return array[i];\r\n            }\r\n        }\r\n        return level;\r\n    }\r\n    const [password, setPasswd] = React.useState('')\r\n    const typePassword = (event) => {\r\n        setPasswd(\r\n            event.target.value\r\n        )\r\n        setPasswordStatus({\r\n            passwordError: false, errorMsg: ''\r\n        })\r\n    }\r\n    const [confirmPassword, setconfirmPassword] = React.useState('')\r\n    const typeConfirmPassword = (event) => {\r\n        setconfirmPassword(\r\n            event.target.value\r\n        )\r\n        setPasswordStatus({\r\n            passwordError: false, errorMsg: ''\r\n        })\r\n    }\r\n    const [passwordStatus, setPasswordStatus] = React.useState({ passwordError: false, errorMsg: '' })\r\n    const checkPassword = () => {\r\n        if (password === '' && confirmPassword === '') {\r\n            setPasswordStatus({\r\n                passwordError: true, errorMsg: '没有密码'\r\n            })\r\n        } else {\r\n            //检验密码相同 \r\n            if (password !== confirmPassword) {\r\n                setPasswordStatus({\r\n                    passwordError: true, errorMsg: '密码不相同'\r\n                })\r\n            } else {\r\n                setPasswordStatus({\r\n                    passwordError: false, errorMsg: ''\r\n                })\r\n                const passwordLevel = 3\r\n                const passwordTest = checkPasswordLevel(password, passwordLevel)\r\n                if (passwordTest < passwordLevel) {\r\n                    setPasswordStatus({\r\n                        passwordError: true,\r\n                        errorMsg: '密码需要最少8位，并且包含数字、大写、小写字母'\r\n                    })\r\n                    //密码难度达到级别\r\n                } else {\r\n                    setPasswordStatus({ passwordError: false, errorMsg: '' })\r\n                    props.Wallet(password)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"密码\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={typePassword}\r\n                    value={password}\r\n                    error={(password !== confirmPassword && confirmPassword !== '') || passwordStatus.passwordError}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ paddingBottom: '0px' }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirm-password\"\r\n                    label=\"确认密码\"\r\n                    type=\"password\"\r\n                    id=\"confirm-password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={typeConfirmPassword}\r\n                    value={confirmPassword}\r\n                    error={(password !== confirmPassword && confirmPassword !== '') || passwordStatus.passwordError}\r\n                />\r\n                <FormHelperText\r\n                    id=\"component-error-text\"\r\n                    error={passwordStatus.passwordError}\r\n                >\r\n                    {passwordStatus.errorMsg}\r\n                </FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    error\r\n                    fullWidth\r\n                    multiline={true}\r\n                    id=\"outlined-ervror\"\r\n                    label=\"⚠️\"\r\n                    value=\"密码只保存在你的浏览器记忆中，一旦丢失无法找回，请备份或抄写下助记词，下次可以使用助记词恢复钱包\"\r\n                    variant=\"outlined\"\r\n                    onChange={() => { return false }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={checkPassword}\r\n                >\r\n                    {props.action}\r\n                </Button>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport PasswordView from './PasswordView'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    CardContent: {\n        minHeight: 170,\n        '& div': {\n            width: '25%',\n            height: 40,\n            fontSize: 30,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            float: 'left',\n            marginTop: '10px',\n            textAlign: 'center',\n        }\n    },\n    CardContent_en: {\n        minHeight: 170,\n        '& div': {\n            width: '25%',\n            height: 40,\n            fontSize: 18,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            float: 'left',\n            marginTop: '10px',\n            textAlign: 'center',\n            fontWeight: 500\n        }\n    },\n    CardActions: {\n        margin: 0,\n        textAlign: 'center',\n        display: 'block',\n        fontStyle: 'italic'\n    },\n    CardActionsError: {\n        margin: 0,\n        textAlign: 'center',\n        display: 'block',\n        fontStyle: 'italic',\n        color: 'rgb(220, 0, 78)!important'\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 200\n    },\n    CardError: {\n        borderColor: 'rgb(220, 0, 78)!important',\n        borderWidth: 1,\n        borderStyle: 'dashed',\n    },\n    wordPaper_zh: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: '0px!important',\n        '& div': {\n        },\n        '& div>div': {\n            width: 40,\n            height: 40,\n            fontSize: 30,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            margin: '0px auto',\n            marginBottom: '20px'\n        }\n    },\n    wordPaper_en: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        paddingTop: '0px!important',\n        paddingBottom: '0px!important',\n        '& div': {\n            textAlign: 'center',\n        },\n        '& div>div': {\n            height: 40,\n            fontSize: 18,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            margin: '0px auto',\n            marginBottom: '20px',\n            display: 'inline-block'\n        }\n    }\n}))\n\nexport default function CreateWalletView(props) {\n    console.log(\"Render CreateWalletView\")\n    const classes = useStyles()\n    const { randMnemonic, mnemonic_lang, useMnemonic } = props\n    const [wordDisplay, setWordDisplay] = React.useState([])\n    const [mnemonic, setMnemonic] = React.useState([])\n    const choseWord = (event) => {\n        wordDisplay[event.target.attributes.value.nodeValue] = 'none'\n        setWordDisplay([...wordDisplay])\n        mnemonic.push(event.target.innerHTML)\n        setMnemonic(mnemonic)\n    }\n\n    const removeWord = (event) => {\n        var randMnemonic = props.randMnemonic\n        for (var i = 0; i < randMnemonic.length; i++) {\n            if (randMnemonic[i] === event.target.innerHTML) {\n                wordDisplay[i] = ''\n            }\n        }\n        var newArr = []\n        for (var j = 0; j < mnemonic.length; j++) {\n            if (mnemonic[j] !== event.target.innerHTML) {\n                newArr.push(mnemonic[j])\n            }\n        }\n        setWordDisplay([...wordDisplay])\n        setMnemonic(newArr)\n    }\n\n    const [CardActionsError, setCardActionsError] = React.useState(false)\n    const Wallet = (password) => {\n        let mnemonicString = mnemonic.join(' ')\n        //助记词不相同\n        if (mnemonicString !== useMnemonic) {\n            setCardActionsError(true)\n            //助记词相同\n        } else {\n            setCardActionsError(false)\n            props.Wallet(password)\n        }\n    }\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        创建钱包\n                    </Typography>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper elevation={3} className={CardActionsError ? classes.CardError : classes.card}>\n                                <Grid item xs={12} className={mnemonic_lang === 'zh' ? classes.CardContent : classes.CardContent_en}>\n                                    {mnemonic.map((item, index) => {\n                                        return (\n                                            <Grid item key={index}\n                                                value={index}\n                                                onClick={removeWord}\n                                            >\n                                                {item}\n                                            </Grid>\n                                        )\n                                    })}\n                                </Grid>\n                                <Typography variant=\"caption\"\n                                    className={CardActionsError ? classes.CardActionsError : classes.CardActions}\n                                >\n                                    请按照正确的顺序选择助记词\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} className={mnemonic_lang === 'zh' ? classes.wordPaper_zh : classes.wordPaper_en}>\n                            {randMnemonic.map((item, index) => {\n                                return (\n                                    <Grid\n                                        item\n                                        xs={3}\n                                        key={index}\n                                    >\n                                        <Paper\n                                            elevation={3}\n                                            value={index}\n                                            onClick={choseWord}\n                                            style={{ display: wordDisplay[index] }}\n                                        >\n                                            {item}\n                                        </Paper>\n                                    </Grid>\n                                )\n                            })}\n                        </Grid>\n                        <PasswordView Wallet={Wallet} action={`创建钱包`}></PasswordView>\n                    </Grid>\n                    <Grid container justify=\"flex-end\" spacing={2}>\n                        <Grid item xs={12}></Grid>\n                        <Grid item xs>\n                            <Link to=\"./ImportWallet\" component={RouterLink} variant=\"body2\">\n                                导入钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"./\" component={RouterLink} variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport CreateWalletView from './components/CreateWalletView'\nimport cookie from 'react-cookies'\nimport { aesEncrypt, sha1 } from './utils/Aes'\nimport { randMnemonic } from './utils/Tools'\n\nclass CreateWallet extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randMnemonic: randMnemonic(this.props.location.state.useMnemonic),\n            mnemonic: [],\n            important: false,\n            wordDisplay: [],\n            CardActionsError: false,\n            mnemonic_lang: this.props.location.state.mnemonic_lang,\n            useMnemonic: this.props.location.state.useMnemonic\n        }\n        if (!this.props.location.state) {\n            window.location.href = \"./\"\n        }\n    }\n    componentDidMount() {\n        //console.log(this.state.useMnemonic)\n    }\n    Wallet = (password) => {\n        const encrypt = aesEncrypt(this.state.useMnemonic, sha1(password))\n        localStorage.setItem(\"encrypt\", encrypt)\n        const days = 1\n        const expires = new Date()\n        expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * days)\n        cookie.save('password', sha1(password).toString(), { path: '/', expires: expires })\n        window.location.href = \"./Wallet\"\n    }\n    render() {\n        console.log(\"Render CreateWallet\")\n        return (\n            <CreateWalletView\n                randMnemonic={this.state.randMnemonic}\n                useMnemonic={this.state.useMnemonic}\n                mnemonic_lang={this.state.mnemonic_lang}\n                Wallet={this.Wallet}\n                choseWord={this.choseWord}\n                removeWord={this.removeWord}\n            ></CreateWalletView>\n        )\n    }\n}\n\nexport default CreateWallet;\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport Paper from '@material-ui/core/Paper'\nimport { Link as RouterLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport SwipeableViews from 'react-swipeable-views'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    copyButton: {\n        width: '100%',\n    },\n    paper: {\n        minWidth: 275,\n        '& div': {\n            padding: 0\n        },\n        '& h4': {\n            letterSpacing: '3.4rem',\n            lineHeight: '3rem',\n            textAlign: 'end'\n        },\n        '& h5': {\n            lineHeight: '3rem',\n            margin: '0px 15px',\n            wordSpacing: '15px',\n            textAlign: 'justify'\n        }\n    }\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    }\n}\n\n\nexport default function MnemonicView(props) {\n    console.log(\"Render MnemonicView\")\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const { mnemonic_zh, mnemonic_en } = props\n    const [value, setValue] = React.useState(0)\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const [mnemonicState, setMnemonicState] = React.useState({ useMnemonic: mnemonic_zh, mnemonic_lang: 'zh' })\n    React.useEffect(() => {\n        setMnemonicState({\n            useMnemonic: mnemonic_zh,\n            mnemonic_lang: 'zh'\n        })\n    }, [mnemonic_zh])\n\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        助记词\n                    </Typography>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper elevation={3} className={classes.paper}>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                    variant=\"fullWidth\"\n                                >\n                                    <Tab label=\"中文助记词\" {...a11yProps(0)} />\n                                    <Tab label=\"英文助记词\" {...a11yProps(1)} />\n                                </Tabs>\n                                <SwipeableViews\n                                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                                    index={value}\n                                    onChangeIndex={setValue}\n                                >\n                                    <TabPanel value={value} index={0}>\n                                        <Typography variant=\"h4\">\n                                            {mnemonic_zh.replace(/ /g, '')}\n                                        </Typography>\n                                        <Typography align={'center'}>\n                                            <CopyToClipboard text={mnemonic_zh}>\n                                                <Button\n                                                    size=\"small\"\n                                                    className={classes.copyButton}\n                                                    startIcon={<FileCopyIcon />}\n                                                >\n                                                    拷贝助记词\n                                                </Button>\n                                            </CopyToClipboard>\n                                        </Typography>\n                                    </TabPanel>\n                                    <TabPanel value={value} index={1}>\n                                        <Typography variant=\"h5\">\n                                            {mnemonic_en}\n                                        </Typography>\n                                        <Typography align={'center'}>\n                                            <CopyToClipboard text={mnemonic_en}>\n                                                <Button\n                                                    size=\"small\"\n                                                    className={classes.copyButton}\n                                                    startIcon={<FileCopyIcon />}\n                                                >\n                                                    拷贝助记词\n                                                </Button>\n                                            </CopyToClipboard>\n                                        </Typography>\n                                    </TabPanel>\n                                </SwipeableViews>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                multiline={true}\n                                id=\"outlined-ervror\"\n                                label=\"⚠️\"\n                                value=\"请抄写或保存助记词，然后进行下一步\"\n                                variant=\"outlined\"\n                                onChange={() => { return false }}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        component={RouterLink}\n                        to={{\n                            pathname: \"./CreateWallet\",\n                            state: mnemonicState\n                        }}\n                    >\n                        下一步\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item xs>\n                            <Link to=\"./ImportWallet\" component={RouterLink} variant=\"body2\">\n                                导入钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"./\" component={RouterLink} variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport MnemonicView from './components/MnemonicView'\nvar bip39 = require('bip39')\n\nclass Mnemonic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            mnemonic_zh: bip39.generateMnemonic(128, null, bip39.wordlists.chinese_simplified), \n            mnemonic_en: bip39.generateMnemonic(128, null, bip39.wordlists.english) \n        }\n    }\n\n    render() {\n        console.log(\"Render Mnemonic\")\n        return (\n            <MnemonicView\n                mnemonic_zh={this.state.mnemonic_zh}\n                mnemonic_en={this.state.mnemonic_en}\n                switchLang={this.switchLang}\n            ></MnemonicView>\n        )\n    }\n}\n\nexport default Mnemonic\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport PasswordView from './PasswordView'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { validateMnemonic } from '../utils/Tools'\nimport { aesEncrypt, sha1 } from '../utils/Aes'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        minWidth: 275,\n        '& textarea': {\n            fontSize: '44px',\n            lineHeight: '54px',\n            textAlign: 'justify',\n            height: '120px',\n        }\n    },\n    title: {\n        fontSize: 14,\n    },\n    error: {\n        color: 'rgb(220, 0, 78)!important',\n        '& textarea': {\n            color: 'rgb(220, 0, 78)!important'\n        },\n        '& label': {\n            fontSize: 20\n        }\n    },\n    mnemonic:{\n        '& textarea': {\n            fontSize:20,\n            lineHeight:'30px',\n            textAlign:'center'\n        },\n    }\n}))\n\nexport default function ImportWalletView(props) {\n    console.log(\"Render ImportWalletView\")\n    const [mnemonic, setMnemonic] = React.useState('')\n    const typeMnemonic = event => {\n        setMnemonic(event.target.value)\n    }\n\n    const [mnemonicErrorState, setMnemonicError] = React.useState({ error: false, errorMsg: '' })\n\n    const Wallet = (password) => {\n        var bool = validateMnemonic(mnemonic)\n        if (!bool) {\n            setMnemonicError({ error: true, errorMsg: '助记词不正确' })\n        } else {\n            var encrypt = aesEncrypt(mnemonic, sha1(password))\n            localStorage.setItem(\"encrypt\", encrypt)\n            document.cookie = \"password=\" + sha1(password)\n            window.location.href = \"./Wallet\"\n        }\n    }\n    \n    const classes = useStyles()\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        导入钱包\n                    </Typography>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                multiline={true}\n                                rows='3'\n                                required\n                                fullWidth\n                                name=\"mnemonic\"\n                                label=\"输入助记词\"\n                                type=\"text\"\n                                id=\"mnemonic\"\n                                className={classes.mnemonic}\n                                error={mnemonicErrorState.error}\n                                onChange={typeMnemonic}\n                                value={mnemonic}\n                            />\n                            <FormHelperText\n                                id=\"component-error-text\"\n                                error={mnemonicErrorState.error}\n                            >\n                                {mnemonicErrorState.errorMsg}\n                            </FormHelperText>\n                        </Grid>\n                        <PasswordView Wallet={Wallet} action={`导入钱包`}></PasswordView>\n                    </Grid>\n                    <Grid container justify=\"flex-end\" spacing={2}>\n                        <Grid item xs={12}></Grid>\n                        <Grid item xs>\n                            <Link href=\"./Mnemonic\" variant=\"body2\">\n                                创建钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"./\" variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport ImportWalletView from './components/ImportWalletView'\n\nclass ImportWallet extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { }\n    }\n    render() {\n        console.log(\"Render ImportWallet\")\n        return (\n            <ImportWalletView></ImportWalletView>\n        )\n    }\n}\n\nexport default ImportWallet\n","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\n\r\nconst useStyles = makeStyles({\r\n    right: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        padding: 0,\r\n        border: '2px solid'\r\n    },\r\n    menu: {\r\n        '& .MuiMenu-paper': {\r\n            background: '#000',\r\n            opacity: '0.8!important',\r\n            color: '#aaa',\r\n            width: 260\r\n        }\r\n    },\r\n    divider: {\r\n        background: \"#999\"\r\n    },\r\n    firstItem: {\r\n        paddingTop: 0,\r\n        minHeight: 30\r\n    },\r\n    itemicon: {\r\n        minWidth: 30,\r\n        margin: 5\r\n    }\r\n})\r\n\r\nexport default function AccountMenu(props) {\r\n    console.log(\"Render AccountMenu\")\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const {currentAccount} = props\r\n    const choseAccount = (event) =>{\r\n        setAnchorEl(null)\r\n        props.choseAccount(event)\r\n    }\r\n    const [accounts,setAccounts] = React.useState(props.accounts)\r\n    React.useEffect(() => {\r\n        setAccounts(props.accounts)\r\n    }, [props.accounts])\r\n    return (\r\n        <Fragment>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                className={classes.right}\r\n                aria-haspopup=\"true\"\r\n                aria-controls=\"simple-menu\"\r\n                onClick={handleClick}\r\n            >\r\n                {\r\n                    accounts[currentAccount].address ?\r\n                        <Jazzicon diameter={35} seed={jsNumberForAddress(accounts[currentAccount].address)} />\r\n                        :\r\n                        <AccountCircleIcon style={{ fontSize: 35 }} />\r\n                }\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                className={classes.menu}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose} className={classes.firstItem}>\r\n                    我的账户\r\n            </MenuItem>\r\n                <Divider className={classes.divider} />\r\n                {accounts.map((item, index) => {\r\n                    return (\r\n                        <MenuItem onClick={choseAccount} key={index} index={index}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={2}>\r\n                                    <ListItemIcon className={classes.itemicon}>\r\n                                        <Jazzicon diameter={24} seed={jsNumberForAddress(item.address || '0x0')} />\r\n                                    </ListItemIcon>\r\n                                </Grid>\r\n                                <Grid item xs={10}>\r\n                                    <Grid container spacing={0}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography noWrap>账户 {index + 1}&nbsp;&nbsp;<small><em>余额：{item.balance}</em></small></Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography noWrap>{item.address}</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Menu>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport AccountMenu from './AccountMenu'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        paddingRight: 24,\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        minWidth: 150,\r\n        background: '#d2d9f8',\r\n        borderRadius: '5px',\r\n        height: 40,\r\n        marginLeft: '-75px',\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '50%',\r\n        '& .MuiSelect-filled.MuiSelect-filled': {\r\n            padding: 12\r\n        }\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    }\r\n}))\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            background: '#000',\r\n            opacity: '0.8',\r\n            color: '#aaa'\r\n        }\r\n    }\r\n}\r\nexport default function MyToolbar(props){\r\n    console.log(\"Render MyToolbar\")\r\n    const classes = useStyles()\r\n    const {networks, ...other} = props\r\n\r\n    const [networkId,setNetworkId] = React.useState(props.networkId)\r\n    const handleChange = (event) => {\r\n        setNetworkId(event.target.value)\r\n        props.getBalance(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"absolute\" className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.toggleDrawer(true)}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n\r\n                <FormControl variant=\"filled\" size={'small'} className={classes.formControl}>\r\n                    <Select\r\n                        disableUnderline={true}\r\n                        className={classes.select}\r\n                        MenuProps={MenuProps}\r\n                        displayEmpty\r\n                        value={networkId}\r\n                        defaultValue={networkId}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {networks.map((item, index) => {\r\n                            return (\r\n                                <MenuItem className={classes.menuitem} key={index} value={index}>{item.nameCN}</MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <AccountMenu networks={networks} {...other}></AccountMenu>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport BarChartIcon from '@material-ui/icons/BarChart'\r\nimport LayersIcon from '@material-ui/icons/Layers'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment'\r\nimport { Eth } from 'react-cryptocoins'\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <Eth />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"以太坊\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Orders\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Reports\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem>\r\n    </div>\r\n)\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n)","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport { mainListItems } from './ListItems'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\n\r\n\r\nconst drawerWidth = 200\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    h1: {\r\n        padding: '0px 10px',\r\n        lineHeight: '56px',\r\n        textAlign: 'center'\r\n    },\r\n    list: {\r\n        width: drawerWidth,\r\n    },\r\n}))\r\n\r\nexport default function MyDrawer(props) {\r\n    console.log(\"Render MyDrawer\")\r\n    const classes = useStyles()\r\n\r\n    const sideList = () => (\r\n        <Box\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={props.toggleDrawer(false)}\r\n            onKeyDown={props.toggleDrawer(false)}\r\n        >\r\n            <Box className={classes.toolbar} >\r\n                <Typography component=\"h1\" className={classes.h1}>\r\n                    打开钱包\r\n                </Typography>\r\n            </Box>\r\n            <Divider />\r\n            <List>{mainListItems}</List>\r\n        </Box>\r\n    )\r\n    return (\r\n        <SwipeableDrawer\r\n            open={props.open}\r\n            onClose={props.toggleDrawer(false)}\r\n            onOpen={props.toggleDrawer(true)}\r\n        >\r\n            {sideList('left')}\r\n        </SwipeableDrawer>\r\n    )\r\n}","export const networks = [\r\n    {\r\n        nameCN:\"以太坊主网络\",\r\n        nameEN:\"mainnet\",\r\n        id:1\r\n    },\r\n    {\r\n        nameCN:\"Ropsten测试网络\",\r\n        nameEN:\"ropsten\",\r\n        id:3\r\n    },\r\n    {\r\n        nameCN:\"Rinkeby测试网络\",\r\n        nameEN:\"rinkeby\",\r\n        id:4\r\n    },\r\n    // {\r\n    //     nameCN:\"Goeli测试网络\",\r\n    //     nameEN:\"goerli\",\r\n    //     id:5\r\n    // },\r\n    {\r\n        nameCN:\"Kovan测试网络\",\r\n        nameEN:\"kovan\",\r\n        id:42\r\n    },\r\n]","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport { Eth } from 'react-cryptocoins'\r\nimport moment from \"moment\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding:0\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    mainItem:{\r\n        paddingTop:0\r\n    },\r\n    topItem:{\r\n        paddingBottom:0\r\n    },\r\n    listItem:{\r\n        '& span':{\r\n            lineHeight:'24px',\r\n            fontSize:'1rem'\r\n        },\r\n        '& div':{\r\n            width:50,\r\n            textAlign:'center',\r\n            fontSize:10,\r\n            height:20,\r\n            lineHeight:'16px',\r\n            marginTop:'8px'\r\n        }\r\n    },\r\n    status:{\r\n        background:theme.palette.success.main,\r\n        color:theme.palette.success.contrastText,\r\n        padding:'2px 4px',\r\n        borderRadius: 3,\r\n    },\r\n    statusError:{\r\n        background:theme.palette.error.main,\r\n        color:theme.palette.error.contrastText,\r\n        padding:'2px 4px',\r\n        borderRadius: 3,\r\n    },\r\n    listItemRight:{\r\n        lineHeight:'24px',\r\n        textAlign:'right'\r\n    },\r\n    value:{\r\n        fontSize: '1rem',\r\n        fontWeight:400\r\n    },\r\n    gasFee:{\r\n        lineHeight:'30px'\r\n    }\r\n}))\r\n\r\nexport default function TxList(props) {\r\n    const classes = useStyles()\r\n    const { txlist } = props\r\n\r\n    console.log(\"Render TxList\")\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {txlist.map((item, index) => {\r\n                return(\r\n                    <Fragment key={index}>\r\n                        <ListItem alignItems=\"flex-start\" className={classes.topItem}>\r\n                            <Typography\r\n                                variant=\"caption\"\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                #{item.nonce} - {moment(parseInt(item.timeStamp)*1000).format('YYYY-MM-DD LT')}\r\n                            </Typography>\r\n                        </ListItem>\r\n                        <ListItem alignItems=\"flex-start\" className={classes.mainItem}>\r\n                            <ListItemAvatar>\r\n                                {item.to === '' ? \r\n                                    <Eth size={36}/>\r\n                                :\r\n                                    <Jazzicon diameter={36} seed={jsNumberForAddress(item.to)} />\r\n                                }\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={item.inputData}\r\n                                className={classes.listItem}\r\n                                secondary={\r\n                                    <Typography\r\n                                        component=\"div\"\r\n                                        className={item.isError === 1 ? classes.statusError : classes.status}\r\n                                    >\r\n                                        {item.isError === 1 ? `错误` : `确认`}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        className={classes.value}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {item.value}\r\n                                    </Typography>\r\n                                }\r\n                                className={classes.listItemRight}\r\n                                component=\"div\"\r\n                                secondary={\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        className={classes.gasFee}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        交易费：{item.gasFee}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider component=\"li\" />\r\n                    </Fragment>\r\n                )})\r\n            }\r\n        </List>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nvar QRCode = require('qrcode.react')\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    DialogTitle: {\r\n        textAlign: 'center',\r\n        '& .MuiDialog-paper': {\r\n            overflowY: 'unset'\r\n        },\r\n        '& .paper': {\r\n            position: 'absolute',\r\n            top: '-50px',\r\n            marginLeft: '50%!important',\r\n            left: '-50px'\r\n        },\r\n        '& .MuiDialogTitle-root': {\r\n            marginTop: 50,\r\n        }\r\n    },\r\n    DialogActions: {\r\n        width:'100%'\r\n    }\r\n}))\r\n\r\nexport default function Deposit(props) {\r\n    const classes = useStyles()\r\n    const handleDepositClose = () => {\r\n        props.setDepositOpen(false)\r\n    }\r\n    const { currentAccount, address, depositOpen } = props\r\n    return (\r\n        <Dialog\r\n            open={depositOpen}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleDepositClose}\r\n            aria-labelledby=\"deposit-dialog-slide-title\"\r\n            aria-describedby=\"deposit-dialog-slide-description\"\r\n            className={classes.DialogTitle}\r\n            fullWidth\r\n        >\r\n            <Jazzicon diameter={100} seed={jsNumberForAddress(address)} />\r\n            <DialogTitle id=\"deposit-dialog-slide-title\">\r\n                账户 {parseInt(currentAccount) + 1}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"deposit-dialog-slide-description\">\r\n                    <QRCode value={`ethereum:` + address} size={200} />\r\n                </DialogContentText>\r\n                <CopyToClipboard text={address}>\r\n                    <Button className={classes.DialogActions}>\r\n                        <Typography noWrap>{address}</Typography>\r\n                    </Button>\r\n                </CopyToClipboard>\r\n            </DialogContent>\r\n            <DialogContent>\r\n                <Button onClick={handleDepositClose} color=\"primary\" fullWidth variant='outlined'>\r\n                    关闭\r\n                    </Button>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@material-ui/core/Box'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport isEthereumAddress from 'is-ethereum-address'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport { EthAlt } from 'react-cryptocoins'\r\nimport { sendTransaction, getGasfee } from '../utils/Tools'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    DialogTitle: {\r\n        textAlign: 'center',\r\n        '& .MuiDialog-paper': {\r\n            overflowY: 'unset'\r\n        },\r\n        '& .paper': {\r\n            position: 'absolute',\r\n            top: '-50px',\r\n            marginLeft: '50%!important',\r\n            left: '-50px'\r\n        },\r\n        '& .MuiDialogTitle-root': {\r\n            marginTop: 50,\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    DialogActions: {\r\n        width: '100%'\r\n    },\r\n    TextField: {\r\n        marginBottom: '10px'\r\n    },\r\n    selectGasfee: {\r\n        marginBottom: '10px'\r\n    },\r\n    divider: {\r\n        marginTop: '15px',\r\n        marginBottom: '15px'\r\n    },\r\n    noPadding: {\r\n        padding: '0px',\r\n        '& .MuiBox-root': {\r\n            padding: '0px'\r\n        }\r\n    },\r\n    addressList: {\r\n        marginTop: 40,\r\n        padding: '8px 12px',\r\n        '& .MuiGrid-root': {\r\n            position: 'relative',\r\n        },\r\n        '& .MuiGrid-item:first-child': {\r\n            padding: '0px 16px 0px 46px',\r\n            '& .paper': {\r\n                left: '10px',\r\n            }\r\n        },\r\n        '& .MuiGrid-item': {\r\n            position: 'relative',\r\n            padding: '0px 4px 0px 56px',\r\n            height: 44,\r\n            '& .MuiTypography-root': {\r\n                lineHeight: '44px'\r\n            },\r\n            '& .paper': {\r\n                left: '20px',\r\n            }\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            background: '#fff',\r\n            border: '1px solid #999',\r\n            borderRadius: '50px',\r\n            width: '32px',\r\n            height: '32px',\r\n            color: '#999',\r\n            position: 'absolute',\r\n            top: '6px',\r\n            left: '50%',\r\n            marginLeft: '-16px'\r\n        },\r\n        '& .paper': {\r\n            position: 'absolute',\r\n            top: '6px',\r\n            marginLeft: '0%!important'\r\n        }\r\n    },\r\n    DialogContent: {\r\n        textAlign: 'left'\r\n    }\r\n}))\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default function Send(props) {\r\n    console.log(\"Render Send\")\r\n    const classes = useStyles()\r\n    const { balance, address, sendOpen, currentAccount, mnemonic, networks, networkId } = props\r\n    const theme = useTheme()\r\n    let networkName = networks[networkId].nameEN\r\n\r\n    const [sendValue, setSendValue] = React.useState(0)\r\n    const handleSetSendValue = (event) => {\r\n        setSendValue(event.target.value)\r\n        setTotleAmount(parseFloat(event.target.value) + parseFloat(gasfee))\r\n    }\r\n\r\n    const [variant, setVariant] = React.useState(['outlined', 'contained', 'outlined'])\r\n\r\n    const [gasfee, setGasfee] = React.useState(0)\r\n    getGasfee(networkName).then(function (res) {\r\n        setGasfee(parseFloat(res))\r\n    })\r\n    React.useEffect(() => {\r\n        setGasfee(gasfee)\r\n        setMyGasfee(gasfee)\r\n        setTotleAmount(parseFloat(sendValue) + gasfee)\r\n    }, [gasfee,sendValue])\r\n\r\n\r\n    const [myGasfee, setMyGasfee] = React.useState(gasfee)\r\n    const handleChoseGasfee = (event) => {\r\n        const variant = ['outlined', 'outlined', 'outlined']\r\n        const index = event.currentTarget.attributes.index.nodeValue\r\n        const value = event.currentTarget.attributes.value.nodeValue\r\n        variant[index] = 'contained'\r\n        setVariant(variant)\r\n        setMyGasfee(parseFloat(value))\r\n        setTotleAmount(parseFloat(sendValue) + parseFloat(value))\r\n    }\r\n\r\n\r\n    const [toAddress, setToAddress] = React.useState('')\r\n    const handleTypeAddress = (event) => {\r\n        setToAddress(event.target.value)\r\n    }\r\n\r\n    const [tabValue, setTabValue] = React.useState(0)\r\n    const handleChangeTab = (event) => {\r\n        let index = parseInt(event.currentTarget.attributes.value.nodeValue)\r\n        switch (index) {\r\n            case 0:\r\n                handleSendClose()\r\n                break\r\n            case 1:\r\n                if (isEthereumAddress(toAddress)) {\r\n                    handleAddressHelper(0)\r\n                    setTabValue(1)\r\n                    handleActionBtn(1)\r\n                } else {\r\n                    handleAddressHelper(1)\r\n                }\r\n                break\r\n            case 2:\r\n                setTabValue(0)\r\n                handleActionBtn(0)\r\n                break\r\n            case 3:\r\n                sendTransaction(toAddress, networkName, mnemonic, currentAccount, sendValue,myGasfee).then(function (res) {\r\n                    console.log(\"TCL: handleChangeTab -> res\", res)\r\n                })\r\n\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const [addressHelper, setAddressHelper] = React.useState({ helperText: '', error: false })\r\n    const handleAddressHelper = (value) => {\r\n        let addressHelper = value === 0 ? { helperText: '', error: false } : { helperText: '以太坊地址错误', error: true }\r\n        setAddressHelper(addressHelper)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTabValue(0)\r\n    }, [sendOpen])\r\n\r\n    const [actionBtn, setActionBtn] = React.useState([{ txt: '关闭', value: 0 }, { txt: '下一步', value: 1 }])\r\n    const handleActionBtn = (index) => {\r\n        const actionBtnState = index === 1 ? [{ txt: '返回', value: 2 }, { txt: '确认', value: 3 }] : [{ txt: '关闭', value: 0 }, { txt: '下一步', value: 1 }]\r\n        setActionBtn(actionBtnState)\r\n    }\r\n\r\n    const [totleAmount, setTotleAmount] = React.useState(parseFloat(sendValue) + parseFloat(gasfee))\r\n    const handleSendClose = () => {\r\n        props.setSendOpen(false)\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={sendOpen}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleSendClose}\r\n            aria-labelledby=\"send-dialog-slide-title\"\r\n            aria-describedby=\"send-dialog-slide-description\"\r\n            className={classes.DialogTitle}\r\n            fullWidth\r\n        >\r\n            <Jazzicon diameter={100} seed={jsNumberForAddress(address)} />\r\n\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                disabled\r\n                index={tabValue}\r\n                onChangeIndex={setTabValue}\r\n            >\r\n                <TabPanel value={tabValue} index={0} className={classes.noPadding}>\r\n                    <DialogTitle id=\"send-dialog-slide-title\">\r\n                        <TextField\r\n                            label=\"输入以太坊地址\"\r\n                            variant=\"outlined\"\r\n                            helperText={addressHelper.helperText}\r\n                            fullWidth\r\n                            error={addressHelper.error}\r\n                            className={classes.TextField}\r\n                            onChange={handleTypeAddress}\r\n                            value={toAddress}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            label=\"发送数量\"\r\n                            variant=\"outlined\"\r\n                            helperText={`余额：` + balance + `Ether`}\r\n                            value={sendValue}\r\n                            onChange={handleSetSendValue}\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            className={classes.TextField}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        Ether\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogContent>\r\n                        <FormHelperText id=\"my-helper-text\" className={classes.selectGasfee}>选择交易费：</FormHelperText>\r\n                        <ButtonGroup color=\"secondary\" fullWidth aria-label=\"large secondary button group\">\r\n                            <Button\r\n                                variant={variant[0]}\r\n                                onClick={handleChoseGasfee}\r\n                                value={gasfee / 2}\r\n                                index={0}\r\n                            >\r\n                                慢：{Math.round(gasfee / 2 * 1000000) / 1000000}ETH\r\n                            </Button>\r\n                            <Button\r\n                                variant={variant[1]}\r\n                                onClick={handleChoseGasfee}\r\n                                value={gasfee}\r\n                                index={1}\r\n                            >\r\n                                平均：{Math.round(gasfee * 1000000) / 1000000}ETH\r\n                            </Button>\r\n                            <Button \r\n                                variant={variant[2]} \r\n                                onClick={handleChoseGasfee} \r\n                                value={gasfee * 2} \r\n                                index={2}\r\n                            >\r\n                                快：{Math.round(gasfee * 2 * 1000000) / 1000000}ETH \r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </DialogContent>\r\n                </TabPanel>\r\n                <TabPanel value={tabValue} index={1} className={classes.noPadding}>\r\n                    <DialogContent id=\"send-dialog-slide-title\" className={classes.addressList}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={6}>\r\n                                <Jazzicon diameter={32} seed={jsNumberForAddress(address)} />\r\n                                <Typography noWrap>{address}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Jazzicon diameter={32} seed={jsNumberForAddress(toAddress)} />\r\n                                <Typography noWrap>{toAddress}</Typography>\r\n                            </Grid>\r\n                            <ArrowForwardIcon />\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <Divider className={classes.divider} />\r\n                    <DialogContent className={classes.DialogContent}>\r\n                        <Button variant='outlined' size='small'>\r\n                            <Typography noWrap>发送以太币：</Typography>\r\n                        </Button>\r\n                        <Typography noWrap variant=\"h3\">\r\n                            <EthAlt size={30} /> {parseFloat(sendValue)}\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <Divider className={classes.divider} />\r\n                    <DialogContent>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={3}>\r\n                                <Typography noWrap variant=\"subtitle1\">\r\n                                    交易费：\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Typography noWrap variant=\"subtitle1\" align='right'>\r\n                                    <EthAlt size={14} /> {Math.round(myGasfee * 1000000) / 1000000}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <Divider className={classes.divider} />\r\n                    <DialogContent>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={3}>\r\n                                <Typography noWrap variant=\"subtitle1\">\r\n                                    合计：\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={9}>\r\n                                <Typography noWrap variant=\"subtitle1\" align='right'>\r\n                                    <EthAlt size={14} /> {Math.round(totleAmount * 1000000) / 1000000}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n            <Divider className={classes.divider} />\r\n            <DialogContent>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={3}>\r\n                        <Button\r\n                            onClick={handleChangeTab}\r\n                            value={actionBtn[0].value}\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            color=\"default\"\r\n                            className={classes.DialogActions}\r\n                        >\r\n                            {actionBtn[0].txt}\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Button\r\n                            onClick={handleChangeTab}\r\n                            value={actionBtn[1].value}\r\n                            variant='contained'\r\n                            fullWidth\r\n                            color=\"primary\"\r\n                            className={classes.DialogActions}\r\n                        >\r\n                            {actionBtn[1].txt}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport ethereum from '../assets/images/ethereum.png'\r\nimport Button from '@material-ui/core/Button'\r\nimport PropTypes from 'prop-types'\r\nimport TxList from './TxList'\r\nimport Copyright from \"./Copyright\"\r\nimport Deposit from './Deposit'\r\nimport Send from './Send'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        background: props =>\r\n            props.color === 'red'\r\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        border: 0,\r\n        borderRadius: 5,\r\n        boxShadow: props =>\r\n            props.color === 'red'\r\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        color: 'white',\r\n        height: 40,\r\n        padding: '0 30px',\r\n        margin: 8,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        background: 'linear-gradient(45deg, #ffe1e0 30%, #ace8f6  90%)',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    avatarBg: {\r\n        background: 'linear-gradient(135deg, #21CBF3 30%, #FE6B8B 90%)',\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n        boxShadow: '2px 2px 10px #666'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        background: '#fff',\r\n        width: theme.spacing(13),\r\n        height: theme.spacing(13),\r\n        '& img': {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10)\r\n        }\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& h3': {\r\n            marginBottom: theme.spacing(1),\r\n        }\r\n    },\r\n    sendBtn: {\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n        '& div': {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }\r\n    }\r\n}))\r\n\r\nfunction MyButton(props) {\r\n    const { color, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <Button className={classes.root} {...other} />\r\n}\r\n\r\nMyButton.propTypes = {\r\n    color: PropTypes.oneOf(['blue', 'red']).isRequired,\r\n}\r\n\r\n\r\nexport default function AssetDetail(props) {\r\n    console.log(\"Render AssetDetail\")\r\n    const classes = useStyles()\r\n    const {  ...other } = props\r\n\r\n    const [accounts,setAccounts] = React.useState({address:'0x0',balance:0})\r\n    React.useEffect(() => {\r\n        setAccounts(props.accounts[props.currentAccount])\r\n    }, [props.accounts,props.currentAccount])\r\n\r\n    const [depositOpen, setDepositOpen] = React.useState(false)\r\n    const handleDepositOpen = () => {\r\n        setDepositOpen(true)\r\n    }\r\n\r\n    const [sendOpen, setSendOpen] = React.useState(false)\r\n    const handleSendOpen = () => {\r\n        setSendOpen(true)\r\n    }\r\n\r\n    //https://faucet.ropsten.be/donate/0x319a0cfD7595b0085fF6003643C7eD685269F851\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Box className={classes.main}>\r\n                            <Avatar className={classes.avatarBg}>\r\n                                <Avatar className={classes.avatar} src={ethereum}>\r\n                                </Avatar>\r\n                            </Avatar>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Typography variant=\"h3\">\r\n                                {Math.round(accounts.balance * 10000) / 10000}ETH\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                {accounts.address}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Grid container className={classes.sendBtn}>\r\n                                <Grid item xs={6}>\r\n                                    <MyButton color=\"red\" onClick={handleDepositOpen}>存入</MyButton>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MyButton color=\"blue\" onClick={handleSendOpen}>发送</MyButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Grid container>\r\n                                <TxList {...other}></TxList>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            <Deposit \r\n                {...other} \r\n                address={accounts.address} \r\n                depositOpen={depositOpen} \r\n                setDepositOpen={setDepositOpen}\r\n                classes={classes}\r\n            ></Deposit>\r\n            <Send \r\n                {...other} \r\n                address={accounts.address} \r\n                balance={accounts.balance}\r\n                setSendOpen={setSendOpen}\r\n                sendOpen={sendOpen}\r\n                classes={classes}\r\n            ></Send>\r\n        </main>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport cookie from 'react-cookies'\r\nimport Toolbar from './components/Toolbar'\r\nimport MyDrawer from './components/MyDrawer'\r\nimport { networks } from './utils/networks'\r\nimport AssetDetail from './components/AssetDetail'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { getTxList,getBalance } from './utils/Tools'\r\nimport { validatePasswordMnemonic, getAccounts } from './utils/Tools'\r\n\r\n\r\nclass Wallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let password = cookie.load('password')\r\n        let networkId = cookie.load('networkId')\r\n        let currentAccount = cookie.load('currentAccount')\r\n        let encrypt = localStorage.getItem(\"encrypt\")\r\n        let mnemonic = validatePasswordMnemonic(password, encrypt)\r\n        let expires = new Date()\r\n        expires = expires.setDate(Date.now() + 1000 * 60 * 60 * 24)\r\n\r\n        if (!mnemonic) {\r\n            window.location.href = \"./\"\r\n        }\r\n\r\n        this.state = {\r\n            open: false,\r\n            password: '',\r\n            accounts: getAccounts(mnemonic),\r\n            networks: networks,\r\n            avatarMenu: null,\r\n            mnemonic: mnemonic,\r\n            currentAccount: currentAccount || 0,\r\n            networkId: networkId || 0,\r\n            txlist: [],\r\n            expires: expires\r\n        }\r\n    }\r\n\r\n    toggleDrawer = () => event => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return\r\n        }\r\n        let open = this.state.open\r\n        this.setState({ open: !open })\r\n    }\r\n    componentDidMount() {\r\n        this.getBalance(this.state.networkId)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.currentAccount !== this.state.currentAccount\r\n            || nextState.accounts !== this.state.accounts\r\n            || nextState.txlist !== this.state.txlist\r\n            || nextState.open !== this.state.open\r\n            || nextState.networkId !== this.state.networkId\r\n    }\r\n    getBalance = (networkId) => {\r\n        let mnemonic = this.state.mnemonic\r\n        let that = this\r\n        let networkName = this.state.networks[networkId].nameEN\r\n        if(this.state.txlist.length>0){\r\n            this.setState({ txlist: []})\r\n        }\r\n        getBalance(mnemonic,networkName).then(function(accounts){\r\n            that.setState({ accounts: accounts , networkId: networkId })\r\n            cookie.save('networkId', networkId, { path: '/', expires: that.state.expires })\r\n            that.getTxList(that.state.currentAccount)\r\n        })\r\n    }\r\n    getTxList = (currentAccount) => {\r\n        try {\r\n            let networkName = this.state.networks[this.state.networkId].nameEN\r\n            let address = this.state.accounts[currentAccount].address\r\n            let that = this\r\n            getTxList(networkName, address).then(function (result) {\r\n                that.setState({ txlist: result , currentAccount: currentAccount })\r\n            })\r\n        } catch (e) {\r\n            getTxList(currentAccount)\r\n        }\r\n    }\r\n    choseAccount = (event) => {\r\n        let accountsIndex = event.currentTarget.attributes.index.nodeValue\r\n        cookie.save('currentAccount', accountsIndex, { path: '/', expires: this.state.expires })\r\n        //this.setState({ currentAccount: accountsIndex })\r\n        this.getTxList(accountsIndex)\r\n    }\r\n    render() {\r\n        console.log(\"Render Wallet\")\r\n        return (\r\n            <div style={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <Toolbar\r\n                    toggleDrawer={this.toggleDrawer}\r\n                    getBalance={this.getBalance}\r\n                    networks={this.state.networks}\r\n                    networkId={this.state.networkId}\r\n                    accounts={this.state.accounts}\r\n                    mnemonic={this.state.mnemonic}\r\n                    currentAccount={this.state.currentAccount}\r\n                    choseAccount={this.choseAccount}\r\n                ></Toolbar>\r\n                <MyDrawer\r\n                    toggleDrawer={this.toggleDrawer}\r\n                    open={this.state.open}\r\n                ></MyDrawer>\r\n                <AssetDetail\r\n                    txlist={this.state.txlist}\r\n                    accounts={this.state.accounts}\r\n                    mnemonic={this.state.mnemonic}\r\n                    networkId={this.state.networkId}\r\n                    networks={this.state.networks}\r\n                    currentAccount={this.state.currentAccount}\r\n                ></AssetDetail>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wallet","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport OpenWallet from './OpenWallet'\nimport CreateWallet from './CreateWallet'\nimport Mnemonic from './Mnemonic'\nimport ImportWallet from './ImportWallet'\nimport Wallet from './Wallet'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(props, state) { // 组件每次被rerender的时候，包括在组件构建之后(虚拟dom之后，实际dom挂载之前)，每次获取新的props或state之后；; \n        return true\n    }\n    componentDidCatch(error, info) { // 获取到javascript错误\n    }\n\n    render() {\n        let pathname = window.location.pathname.split(\"/\")\n        return (\n            <Router basename={pathname[1]}>\n                <div>\n                    <Route exact path=\"/\" component={OpenWallet} />\n                    <Route path=\"/Mnemonic\" component={Mnemonic} />\n                    <Route path=\"/CreateWallet\" component={CreateWallet} />\n                    <Route path=\"/ImportWallet\" component={ImportWallet} />\n                    <Route path=\"/Wallet\" component={Wallet} />\n                </div>\n            </Router>\n        )\n    }\n    componentDidMount() { // 挂载后\n\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.accounts !== this.state.accounts\n    }\n    getSnapshotBeforeUpdate(prevProps, prevState) { // 组件更新前触发\n        return null\n    }\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n    componentWillUnmount() { // 组件卸载时触发\n\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            light: '#ff4081',\n            main: '#f50057',\n            dark: \"#c51162\",\n            contrastText: '#ffffff',\n        },\n        default: {\n            light: '#ffd54f',\n            main: '#ffc107',\n            dark: \"#ffa000\",\n            contrastText: 'rgba(0, 0, 0, 0.7)',\n        },\n        success: {\n            light: '#81c784',\n            main: '#4caf50',\n            dark: \"#388e3c\",\n            contrastText: 'rgba(0, 0, 0, 0.7)',\n        },\n        Warning:{\n            light: '#ffb74d',\n            main: '#ff9800',\n            dark: \"#f57c00\",\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: \"#d32f2f\",\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        fontSize: 12,\n    }\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}