{"version":3,"sources":["components/Copyright.js","utils/Aes.js","utils/Tools.js","components/OpenWalletView.js","OpenWallet.js","components/PasswordView.js","components/CreateWalletView.js","CreateWallet.js","components/MnemonicView.js","Mnemonic.js","components/ImportWalletView.js","ImportWallet.js","components/AccountMenu.js","components/Toolbar.js","components/ListItems.js","components/MyDrawer.js","utils/networks.js","components/TxList.js","components/Deposit.js","components/Send.js","components/AssetDetail.js","Wallet.js","App.js","serviceWorker.js","theme.js","index.js","assets/images/bgImg.jpg","assets/images/ethereum.png"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","aesEncrypt","word","key","_word","CryptoJS","enc","Utf8","parse","_key","AES","encrypt","mode","ECB","padding","pad","Pkcs7","toString","aesDecrypt","decrypt","stringify","sha1","password","SHA1","bip39","require","HDWallet","mnemonicToAddress","mnemonic","n","hdwallet","fromMnemonic","derive","getAddress","validateMnemonic","RegExp","test","replace","wordlists","english","split","join","chinese_simplified","createInfuraProvider","network","randMnemonic","newArr","len","length","i","index","Math","floor","random","push","splice","getAccounts","accounts","address","balance","getTxList","networkName","a","async","ethapi","init","account","txlist","txlist_","result","reverse","to","inputData","input","value","round","gasFee","gasUsed","gasPrice","console","log","useStyles","makeStyles","theme","root","height","image","backgroundImage","bgImg","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","OpenWalletView","classes","React","useState","remember","setRemember","setPassword","error","errorMsg","errorState","setError","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","name","label","id","autoComplete","onChange","event","target","FormHelperText","FormControlLabel","control","Checkbox","checked","Button","onClick","localStorage","getItem","days","expires","setDate","now","cookie","save","path","window","location","RouterLink","Box","mt","OpenWallet","props","state","Component","Password","setPasswd","confirmPassword","setconfirmPassword","passwordError","passwordStatus","setPasswordStatus","style","paddingBottom","multiline","level","arr","array","indexOf","checkPasswordLevel","Wallet","action","marginBottom","CardContent","minHeight","fontSize","lineHeight","cursor","float","textAlign","CardContent_en","fontWeight","CardActions","fontStyle","CardActionsError","card","minWidth","CardError","borderColor","borderWidth","borderStyle","wordPaper_zh","justifyContent","flexWrap","wordPaper_en","paddingTop","CreateWalletView","mnemonic_lang","useMnemonic","wordDisplay","setWordDisplay","setMnemonic","choseWord","attributes","nodeValue","innerHTML","removeWord","j","setCardActionsError","Container","maxWidth","map","justify","CreateWallet","setItem","important","this","copyButton","letterSpacing","wordSpacing","TabPanel","children","other","role","hidden","aria-labelledby","p","a11yProps","MnemonicView","useTheme","mnemonic_zh","mnemonic_en","setValue","mnemonicState","setMnemonicState","useEffect","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","text","size","startIcon","pathname","Mnemonic","generateMnemonic","switchLang","title","ImportWalletView","mnemonicErrorState","setMnemonicError","rows","document","ImportWallet","right","position","border","menu","background","opacity","divider","firstItem","itemicon","AccountMenu","anchorEl","setAnchorEl","handleClose","currentAccount","choseAccount","IconButton","aria-haspopup","aria-controls","currentTarget","diameter","seed","jsNumberForAddress","open","Boolean","onClose","TransitionComponent","Fade","MenuItem","Divider","ListItemIcon","noWrap","toolbar","paddingRight","formControl","borderRadius","marginLeft","top","left","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","MenuProps","PaperProps","MyToolbar","networks","networkId","setNetworkId","AppBar","Toolbar","edge","aria-label","toggleDrawer","menuButton","FormControl","Select","disableUnderline","select","displayEmpty","defaultValue","getBalance","menuitem","nameCN","mainListItems","ListItem","button","ListItemText","primary","ListSubheader","inset","mixins","h1","list","MyDrawer","SwipeableDrawer","onOpen","onKeyDown","List","nameEN","inline","mainItem","topItem","listItem","status","success","contrastText","statusError","listItemRight","TxList","nonce","moment","parseInt","timeStamp","format","ListItemAvatar","isError","QRCode","Transition","forwardRef","ref","Slide","Deposit","handleDepositClose","setDepositOpen","depositOpen","Dialog","keepMounted","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Send","sendOpen","handleSendClose","setSendOpen","sendValue","setSendValue","setVariant","gasfee","setGasfee","handleChoseGasfee","toAddress","setToAddress","helperText","InputProps","endAdornment","InputAdornment","selectGasfee","ButtonGroup","boxShadow","content","flexGrow","overflow","appBarSpacer","avatarBg","sendBtn","paddingLeft","overflowY","MyButton","AssetDetail","src","ethereum","Ethjs","web3","Web3","setState","that","provider","eth","then","res","utils","fromWei","e","accountsIndex","load","validatePasswordMnemonic","avatarMenu","nextProps","nextState","App","info","basename","exact","prevProps","prevState","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","createMuiTheme","light","dark","default","Warning","typography","fontFamily","ReactDOM","render","ThemeProvider","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.fdaf971e.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import CryptoJS from 'crypto-js'\r\n\r\nexport function aesEncrypt(word, key) {\r\n    let _word = CryptoJS.enc.Utf8.parse(word)\r\n    let _key = CryptoJS.enc.Utf8.parse(key)\r\n    let encrypted = CryptoJS.AES.encrypt(_word, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n    return encrypted.toString()\r\n}\r\nexport function aesDecrypt(encrypt, key) {\r\n    let _key = CryptoJS.enc.Utf8.parse(key)\r\n    let decrypt = CryptoJS.AES.decrypt(encrypt, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 })\r\n    return CryptoJS.enc.Utf8.stringify(decrypt).toString()\r\n}\r\n\r\nexport function sha1(password) {\r\n    return CryptoJS.SHA1(password)\r\n}","import { aesDecrypt } from './Aes'\r\nvar bip39 = require('bip39')\r\nconst HDWallet = require('ethereum-hdwallet')\r\n\r\nexport function mnemonicToAddress(mnemonic, n) {\r\n    const hdwallet = HDWallet.fromMnemonic(mnemonic)\r\n    return `0x${hdwallet.derive(`m/44'/60'/0'/0/` + n).getAddress().toString('hex')}`\r\n}\r\nexport function jsNumberForAddress(address) {\r\n    const addr = address.slice(2, 10)\r\n    const seed = parseInt(addr, 16)\r\n    return seed\r\n}\r\n\r\nexport function lngDetector(word) {\r\n    var regex = new RegExp(\"^([a-z]{0,200})$\")\r\n    return regex.test(word.replace(/ /g, ''))\r\n}\r\n\r\nexport function validateMnemonic(mnemonic) {\r\n    if (lngDetector(mnemonic)) {\r\n        return bip39.validateMnemonic(mnemonic, bip39.wordlists.english)\r\n    } else {\r\n        return bip39.validateMnemonic(mnemonic.replace(/ /g, '').split('').join(' '), bip39.wordlists.chinese_simplified)\r\n    }\r\n}\r\nconst createInfuraProvider = require('eth-json-rpc-infura/src/createProvider')\r\nconst Ethjs = require('ethjs')\r\n\r\nconst provider = createInfuraProvider({ network: 'mainnet' })\r\nexport const eth = new Ethjs(provider)\r\n\r\nexport function randMnemonic(mnemonic) {\r\n    let randMnemonic = mnemonic.split(' ')\r\n    let newArr = []\r\n    let len = randMnemonic.length\r\n    for (var i = 0; i < len; i++) {\r\n        let index = Math.floor(Math.random() * randMnemonic.length)\r\n        newArr.push(randMnemonic[index])\r\n        randMnemonic.splice(index, 1)\r\n    }\r\n    randMnemonic = [...newArr, ...randMnemonic]\r\n    return randMnemonic\r\n}\r\nexport function validatePasswordMnemonic(password,encrypt) {\r\n    if (!password || !encrypt) {\r\n        console.log(\"encrypt || password Error!\")\r\n        return false\r\n    } else {\r\n        let mnemonic = aesDecrypt(encrypt, password)\r\n        console.log('mnemonic:' + mnemonic)\r\n        var bool = validateMnemonic(mnemonic)\r\n        if (!bool) {\r\n            console.log(\"Mnemonic Error!\")\r\n            return false\r\n        }else{\r\n            return mnemonic\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAccounts(mnemonic){\r\n    const accounts = []\r\n    for (let i = 0; i < 10; i++) {\r\n        accounts[i] = {\r\n            address : mnemonicToAddress(mnemonic, i),\r\n            balance : 0\r\n        }\r\n    }\r\n    return accounts\r\n}\r\nexport async function getTxList(networkName,address){\r\n    const ethapi = require('etherscan-api-cn').init('MIQDQDRUD5XENBPYQ8HAB3GJP2Z6T8ZZ1J',networkName)\r\n    try{\r\n        let txlist_ = await ethapi.account.txlist(address,5000000, 'latest')\r\n        let txlist = txlist_.result.reverse()\r\n        \r\n        if(txlist.length>0){\r\n            for(var i=0;i<txlist.length;i++){\r\n                if(txlist[i].to === ''){\r\n                    txlist[i].inputData = '部署合约'\r\n                }else if(txlist[i].to === address){\r\n                    txlist[i].inputData = '存入'\r\n                }else {\r\n                    if(txlist[i].input === '0x'){\r\n                        txlist[i].inputData = '发送'\r\n                        txlist[i].value = txlist[i].value * -1\r\n                    }else{\r\n                        txlist[i].inputData = '合约调用'\r\n                        txlist[i].value = txlist[i].value > 0 ? txlist[i].value * -1 : txlist[i].value\r\n                    }\r\n                }\r\n                txlist[i].value = Math.round(txlist[i].value/100000000000000) / 10000 + `ETH`\r\n                txlist[i].gasFee=Math.round((txlist[i].gasUsed * txlist[i].gasPrice / 1000000000000000000)*100000)/100000\r\n            }\r\n            return txlist\r\n        }else{\r\n            return []\r\n        }\r\n    }catch(e){\r\n        console.log(\"TCL: getTxList -> e\", e)\r\n        return []\r\n    }\r\n}","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Copyright from \"./Copyright\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport bgImg from '../assets/images/bgImg.jpg'\nimport cookie from 'react-cookies'\nimport { aesDecrypt, sha1 } from '../utils/Aes'\nimport { validateMnemonic } from '../utils/Tools'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(' + bgImg + ')',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport default function OpenWalletView() {\n    const classes = useStyles()\n    console.log(\"Render OpenWalletView\")\n\n    const [remember, setRemember] = React.useState(false)\n    const changeRemember = event => {\n        setRemember(event.target.checked)\n    }\n\n    const [password, setPassword] = React.useState('')\n    const typePassword = event => {\n        setPassword(event.target.value)\n    }\n\n    const [errorState, setError] = React.useState({ error: false, errorMsg: '' })\n    const unlockWallet = () => {\n        if (password === '') {\n            setError({ error: true, errorMsg: '请输入密码' })\n        } else {\n            let encrypt = localStorage.getItem(\"encrypt\")\n            if (!encrypt) {\n                setError({ error: true, errorMsg: '找不到本地钱包，请导入或创建钱包' })\n            } else {\n                var mnemonic = aesDecrypt(encrypt, sha1(password))\n                var bool = validateMnemonic(mnemonic)\n                if (!bool) {\n                    setError({ error: true, errorMsg: '密码或钱包错误，请导入或创建钱包' })\n                } else {\n                    var days = remember ? 7 : 1\n                    const expires = new Date()\n                    expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * days)\n                    cookie.save('password', sha1(password).toString(), { path: '/', expires: expires })\n                    window.location.href = \"./Wallet\"\n                }\n            }\n        }\n    }\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        打开钱包\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"密码\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={typePassword}\n                            value={password}\n                            error={errorState.error}\n                        />\n                        <FormHelperText id=\"component-error-text\" error={errorState.error}>{errorState.errorMsg}</FormHelperText>\n                        <FormControlLabel\n                            control={<Checkbox value={remember} checked={remember} onChange={changeRemember} color=\"primary\" />}\n                            label=\"记住密码\"\n                        />\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={unlockWallet}\n                        >\n                            打开\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link to=\"/ImportWallet\" component={RouterLink} variant=\"body2\">\n                                    导入钱包\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link to=\"/Mnemonic\" component={RouterLink} variant=\"body2\">\n                                    创建钱包\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport OpenWalletView from './components/OpenWalletView'\n\nclass OpenWallet extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {  }\n    }\n    render() {\n        console.log(\"Render OpenWallet\")\n        return (\n            <OpenWalletView></OpenWalletView>\n        )\n    }\n}\n\nexport default OpenWallet\n","import React, { Fragment } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport default function Password(props) {\r\n    console.log(\"Render Password\")\r\n    const checkPasswordLevel = (value, level) => {\r\n        // 0： 表示第一个级别 1：表示第二个级别 2：表示第三个级别\r\n        // 3： 表示第四个级别 4：表示第五个级别\r\n        var arr = [], array = [1, 2, 3, 4];\r\n        if (value.length < 8 || value.length > 20) {//最初级别\r\n            return 0;\r\n        }\r\n        if (/\\d/.test(value)) {//如果用户输入的密码 包含了数字\r\n            arr.push(1);\r\n        }\r\n        if (/[a-z]/.test(value)) {//如果用户输入的密码 包含了小写的a到z\r\n            arr.push(2);\r\n        }\r\n        if (/[A-Z]/.test(value)) {//如果用户输入的密码 包含了大写的A到Z\r\n            arr.push(3);\r\n        }\r\n        if (/\\W/.test(value)) {//如果是非数字 字母 下划线\r\n            arr.push(4);\r\n        }\r\n        for (var i = 0; i < level; i++) {\r\n            if (arr.indexOf(array[i]) === -1) {\r\n                return array[i];\r\n            }\r\n        }\r\n        return level;\r\n    }\r\n    const [password, setPasswd] = React.useState('')\r\n    const typePassword = (event) => {\r\n        setPasswd(\r\n            event.target.value\r\n        )\r\n        setPasswordStatus({\r\n            passwordError: false, errorMsg: ''\r\n        })\r\n    }\r\n    const [confirmPassword, setconfirmPassword] = React.useState('')\r\n    const typeConfirmPassword = (event) => {\r\n        setconfirmPassword(\r\n            event.target.value\r\n        )\r\n        setPasswordStatus({\r\n            passwordError: false, errorMsg: ''\r\n        })\r\n    }\r\n    const [passwordStatus, setPasswordStatus] = React.useState({ passwordError: false, errorMsg: '' })\r\n    const checkPassword = () => {\r\n        if (password === '' && confirmPassword === '') {\r\n            setPasswordStatus({\r\n                passwordError: true, errorMsg: '没有密码'\r\n            })\r\n        } else {\r\n            //检验密码相同 \r\n            if (password !== confirmPassword) {\r\n                setPasswordStatus({\r\n                    passwordError: true, errorMsg: '密码不相同'\r\n                })\r\n            } else {\r\n                setPasswordStatus({\r\n                    passwordError: false, errorMsg: ''\r\n                })\r\n                const passwordLevel = 3\r\n                const passwordTest = checkPasswordLevel(password, passwordLevel)\r\n                if (passwordTest < passwordLevel) {\r\n                    setPasswordStatus({\r\n                        passwordError: true,\r\n                        errorMsg: '密码需要最少8位，并且包含数字、大写、小写字母'\r\n                    })\r\n                    //密码难度达到级别\r\n                } else {\r\n                    setPasswordStatus({ passwordError: false, errorMsg: '' })\r\n                    props.Wallet(password)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"密码\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={typePassword}\r\n                    value={password}\r\n                    error={(password !== confirmPassword && confirmPassword !== '') || passwordStatus.passwordError}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ paddingBottom: '0px' }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirm-password\"\r\n                    label=\"确认密码\"\r\n                    type=\"password\"\r\n                    id=\"confirm-password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={typeConfirmPassword}\r\n                    value={confirmPassword}\r\n                    error={(password !== confirmPassword && confirmPassword !== '') || passwordStatus.passwordError}\r\n                />\r\n                <FormHelperText\r\n                    id=\"component-error-text\"\r\n                    error={passwordStatus.passwordError}\r\n                >\r\n                    {passwordStatus.errorMsg}\r\n                </FormHelperText>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    error\r\n                    fullWidth\r\n                    multiline={true}\r\n                    id=\"outlined-ervror\"\r\n                    label=\"⚠️\"\r\n                    value=\"密码只保存在你的浏览器记忆中，一旦丢失无法找回，请备份或抄写下助记词，下次可以使用助记词恢复钱包\"\r\n                    variant=\"outlined\"\r\n                    onChange={() => { return false }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={checkPassword}\r\n                >\r\n                    {props.action}\r\n                </Button>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport PasswordView from './PasswordView'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    CardContent: {\n        minHeight: 170,\n        '& div': {\n            width: '25%',\n            height: 40,\n            fontSize: 30,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            float: 'left',\n            marginTop: '10px',\n            textAlign: 'center',\n        }\n    },\n    CardContent_en: {\n        minHeight: 170,\n        '& div': {\n            width: '25%',\n            height: 40,\n            fontSize: 18,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            float: 'left',\n            marginTop: '10px',\n            textAlign: 'center',\n            fontWeight: 500\n        }\n    },\n    CardActions: {\n        margin: 0,\n        textAlign: 'center',\n        display: 'block',\n        fontStyle: 'italic'\n    },\n    CardActionsError: {\n        margin: 0,\n        textAlign: 'center',\n        display: 'block',\n        fontStyle: 'italic',\n        color: 'rgb(220, 0, 78)!important'\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 200\n    },\n    CardError: {\n        borderColor: 'rgb(220, 0, 78)!important',\n        borderWidth: 1,\n        borderStyle: 'dashed',\n    },\n    wordPaper_zh: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: '0px!important',\n        '& div': {\n        },\n        '& div>div': {\n            width: 40,\n            height: 40,\n            fontSize: 30,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            margin: '0px auto',\n            marginBottom: '20px'\n        }\n    },\n    wordPaper_en: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        paddingTop: '0px!important',\n        paddingBottom: '0px!important',\n        '& div': {\n            textAlign: 'center',\n        },\n        '& div>div': {\n            height: 40,\n            fontSize: 18,\n            padding: 5,\n            lineHeight: '30px',\n            cursor: 'pointer',\n            margin: '0px auto',\n            marginBottom: '20px',\n            display: 'inline-block'\n        }\n    }\n}))\n\nexport default function CreateWalletView(props) {\n    console.log(\"Render CreateWalletView\")\n    const classes = useStyles()\n    const { randMnemonic, mnemonic_lang, useMnemonic } = props\n    const [wordDisplay, setWordDisplay] = React.useState([])\n    const [mnemonic, setMnemonic] = React.useState([])\n    const choseWord = (event) => {\n        wordDisplay[event.target.attributes.value.nodeValue] = 'none'\n        setWordDisplay([...wordDisplay])\n        mnemonic.push(event.target.innerHTML)\n        setMnemonic(mnemonic)\n    }\n\n    const removeWord = (event) => {\n        var randMnemonic = props.randMnemonic\n        for (var i = 0; i < randMnemonic.length; i++) {\n            if (randMnemonic[i] === event.target.innerHTML) {\n                wordDisplay[i] = ''\n            }\n        }\n        var newArr = []\n        for (var j = 0; j < mnemonic.length; j++) {\n            if (mnemonic[j] !== event.target.innerHTML) {\n                newArr.push(mnemonic[j])\n            }\n        }\n        setWordDisplay([...wordDisplay])\n        setMnemonic(newArr)\n    }\n\n    const [CardActionsError, setCardActionsError] = React.useState(false)\n    const Wallet = (password) => {\n        let mnemonicString = mnemonic.join(' ')\n        //助记词不相同\n        if (mnemonicString !== useMnemonic) {\n            setCardActionsError(true)\n            //助记词相同\n        } else {\n            setCardActionsError(false)\n            props.Wallet(password)\n        }\n    }\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        创建钱包\n                    </Typography>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper elevation={3} className={CardActionsError ? classes.CardError : classes.card}>\n                                <Grid item xs={12} className={mnemonic_lang === 'zh' ? classes.CardContent : classes.CardContent_en}>\n                                    {mnemonic.map((item, index) => {\n                                        return (\n                                            <Grid item key={index}\n                                                value={index}\n                                                onClick={removeWord}\n                                            >\n                                                {item}\n                                            </Grid>\n                                        )\n                                    })}\n                                </Grid>\n                                <Typography variant=\"caption\"\n                                    className={CardActionsError ? classes.CardActionsError : classes.CardActions}\n                                >\n                                    请按照正确的顺序选择助记词\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12} className={mnemonic_lang === 'zh' ? classes.wordPaper_zh : classes.wordPaper_en}>\n                            {randMnemonic.map((item, index) => {\n                                return (\n                                    <Grid\n                                        item\n                                        xs={3}\n                                        key={index}\n                                    >\n                                        <Paper\n                                            elevation={3}\n                                            value={index}\n                                            onClick={choseWord}\n                                            style={{ display: wordDisplay[index] }}\n                                        >\n                                            {item}\n                                        </Paper>\n                                    </Grid>\n                                )\n                            })}\n                        </Grid>\n                        <PasswordView Wallet={Wallet} action={`创建钱包`}></PasswordView>\n                    </Grid>\n                    <Grid container justify=\"flex-end\" spacing={2}>\n                        <Grid item xs={12}></Grid>\n                        <Grid item xs>\n                            <Link to=\"./ImportWallet\" component={RouterLink} variant=\"body2\">\n                                导入钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"./\" component={RouterLink} variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport CreateWalletView from './components/CreateWalletView'\nimport cookie from 'react-cookies'\nimport { aesEncrypt, sha1 } from './utils/Aes'\nimport { randMnemonic } from './utils/Tools'\n\nclass CreateWallet extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            randMnemonic: randMnemonic(this.props.location.state.useMnemonic),\n            mnemonic: [],\n            important: false,\n            wordDisplay: [],\n            CardActionsError: false,\n            mnemonic_lang: this.props.location.state.mnemonic_lang,\n            useMnemonic: this.props.location.state.useMnemonic\n        }\n        if (!this.props.location.state) {\n            window.location.href = \"./\"\n        }\n    }\n    componentDidMount() {\n        //console.log(this.state.useMnemonic)\n    }\n    Wallet = (password) => {\n        const encrypt = aesEncrypt(this.state.useMnemonic, sha1(password))\n        localStorage.setItem(\"encrypt\", encrypt)\n        const days = 1\n        const expires = new Date()\n        expires.setDate(Date.now() + 1000 * 60 * 60 * 24 * days)\n        cookie.save('password', sha1(password).toString(), { path: '/', expires: expires })\n        window.location.href = \"./Wallet\"\n    }\n    render() {\n        console.log(\"Render CreateWallet\")\n        return (\n            <CreateWalletView\n                randMnemonic={this.state.randMnemonic}\n                useMnemonic={this.state.useMnemonic}\n                mnemonic_lang={this.state.mnemonic_lang}\n                Wallet={this.Wallet}\n                choseWord={this.choseWord}\n                removeWord={this.removeWord}\n            ></CreateWalletView>\n        )\n    }\n}\n\nexport default CreateWallet;\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport Paper from '@material-ui/core/Paper'\nimport { Link as RouterLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport SwipeableViews from 'react-swipeable-views'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    copyButton: {\n        width: '100%',\n    },\n    paper: {\n        minWidth: 275,\n        '& div': {\n            padding: 0\n        },\n        '& h4': {\n            letterSpacing: '3.4rem',\n            lineHeight: '3rem',\n            textAlign: 'end'\n        },\n        '& h5': {\n            lineHeight: '3rem',\n            margin: '0px 15px',\n            wordSpacing: '15px',\n            textAlign: 'justify'\n        }\n    }\n}))\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n\nexport default function MnemonicView(props) {\n    console.log(\"Render MnemonicView\")\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const { mnemonic_zh, mnemonic_en } = props\n    const [value, setValue] = React.useState(0)\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n    }\n\n    const [mnemonicState, setMnemonicState] = React.useState({ useMnemonic: mnemonic_zh, mnemonic_lang: 'zh' })\n    React.useEffect(() => {\n        setMnemonicState({\n            useMnemonic: mnemonic_zh,\n            mnemonic_lang: 'zh'\n        })\n    }, [mnemonic_zh])\n\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        助记词\n                    </Typography>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper elevation={3} className={classes.paper}>\n                                <Tabs\n                                    value={value}\n                                    onChange={handleChange}\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                    variant=\"fullWidth\"\n                                >\n                                    <Tab label=\"中文助记词\" {...a11yProps(0)} />\n                                    <Tab label=\"英文助记词\" {...a11yProps(1)} />\n                                </Tabs>\n                                <SwipeableViews\n                                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                                    index={value}\n                                    onChangeIndex={setValue}\n                                >\n                                    <TabPanel value={value} index={0}>\n                                        <Typography variant=\"h4\">\n                                            {mnemonic_zh.replace(/ /g, '')}\n                                        </Typography>\n                                        <Typography align={'center'}>\n                                            <CopyToClipboard text={mnemonic_zh}>\n                                                <Button\n                                                    size=\"small\"\n                                                    className={classes.copyButton}\n                                                    startIcon={<FileCopyIcon />}\n                                                >\n                                                    拷贝助记词\n                                                </Button>\n                                            </CopyToClipboard>\n                                        </Typography>\n                                    </TabPanel>\n                                    <TabPanel value={value} index={1}>\n                                        <Typography variant=\"h5\">\n                                            {mnemonic_en}\n                                        </Typography>\n                                        <Typography align={'center'}>\n                                            <CopyToClipboard text={mnemonic_en}>\n                                                <Button\n                                                    size=\"small\"\n                                                    className={classes.copyButton}\n                                                    startIcon={<FileCopyIcon />}\n                                                >\n                                                    拷贝助记词\n                                                </Button>\n                                            </CopyToClipboard>\n                                        </Typography>\n                                    </TabPanel>\n                                </SwipeableViews>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                multiline={true}\n                                id=\"outlined-ervror\"\n                                label=\"⚠️\"\n                                value=\"请抄写或保存助记词，然后进行下一步\"\n                                variant=\"outlined\"\n                                onChange={() => { return false }}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        component={RouterLink}\n                        to={{\n                            pathname: \"./CreateWallet\",\n                            state: mnemonicState\n                        }}\n                    >\n                        下一步\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item xs>\n                            <Link to=\"./ImportWallet\" component={RouterLink} variant=\"body2\">\n                                导入钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link to=\"./\" component={RouterLink} variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport MnemonicView from './components/MnemonicView'\nvar bip39 = require('bip39')\n\nclass Mnemonic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            mnemonic_zh: bip39.generateMnemonic(128, null, bip39.wordlists.chinese_simplified), \n            mnemonic_en: bip39.generateMnemonic(128, null, bip39.wordlists.english) \n        }\n    }\n\n    render() {\n        console.log(\"Render Mnemonic\")\n        return (\n            <MnemonicView\n                mnemonic_zh={this.state.mnemonic_zh}\n                mnemonic_en={this.state.mnemonic_en}\n                switchLang={this.switchLang}\n            ></MnemonicView>\n        )\n    }\n}\n\nexport default Mnemonic\n","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Copyright from \"./Copyright\"\nimport PasswordView from './PasswordView'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { validateMnemonic } from '../utils/Tools'\nimport { aesEncrypt, sha1 } from '../utils/Aes'\n\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& h1': {\n            marginBottom: theme.spacing(2),\n        }\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    card: {\n        minWidth: 275,\n        '& textarea': {\n            fontSize: '44px',\n            lineHeight: '54px',\n            textAlign: 'justify',\n            height: '120px',\n        }\n    },\n    title: {\n        fontSize: 14,\n    },\n    error: {\n        color: 'rgb(220, 0, 78)!important',\n        '& textarea': {\n            color: 'rgb(220, 0, 78)!important'\n        },\n        '& label': {\n            fontSize: 20\n        }\n    },\n    mnemonic:{\n        '& textarea': {\n            fontSize:20,\n            lineHeight:'30px',\n            textAlign:'center'\n        },\n    }\n}))\n\nexport default function ImportWalletView(props) {\n    console.log(\"Render ImportWalletView\")\n    const [mnemonic, setMnemonic] = React.useState('')\n    const typeMnemonic = event => {\n        setMnemonic(event.target.value)\n    }\n\n    const [mnemonicErrorState, setMnemonicError] = React.useState({ error: false, errorMsg: '' })\n\n    const Wallet = (password) => {\n        var bool = validateMnemonic(mnemonic)\n        if (!bool) {\n            setMnemonicError({ error: true, errorMsg: '助记词不正确' })\n        } else {\n            var encrypt = aesEncrypt(mnemonic, sha1(password))\n            localStorage.setItem(\"encrypt\", encrypt)\n            document.cookie = \"password=\" + sha1(password)\n            window.location.href = \"./Wallet\"\n        }\n    }\n    \n    const classes = useStyles()\n    return (\n        <Grid container>\n            <CssBaseline />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box className={classes.main}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        导入钱包\n                    </Typography>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                multiline={true}\n                                rows='3'\n                                required\n                                fullWidth\n                                name=\"mnemonic\"\n                                label=\"输入助记词\"\n                                type=\"text\"\n                                id=\"mnemonic\"\n                                className={classes.mnemonic}\n                                error={mnemonicErrorState.error}\n                                onChange={typeMnemonic}\n                                value={mnemonic}\n                            />\n                            <FormHelperText\n                                id=\"component-error-text\"\n                                error={mnemonicErrorState.error}\n                            >\n                                {mnemonicErrorState.errorMsg}\n                            </FormHelperText>\n                        </Grid>\n                        <PasswordView Wallet={Wallet} action={`导入钱包`}></PasswordView>\n                    </Grid>\n                    <Grid container justify=\"flex-end\" spacing={2}>\n                        <Grid item xs={12}></Grid>\n                        <Grid item xs>\n                            <Link href=\"./Mnemonic\" variant=\"body2\">\n                                创建钱包\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"./\" variant=\"body2\">\n                                打开钱包\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </Grid>\n    )\n}","import React, { Component } from 'react'\nimport ImportWalletView from './components/ImportWalletView'\n\nclass ImportWallet extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { }\n    }\n    render() {\n        console.log(\"Render ImportWallet\")\n        return (\n            <ImportWalletView></ImportWalletView>\n        )\n    }\n}\n\nexport default ImportWallet\n","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\n\r\nconst useStyles = makeStyles({\r\n    right: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        padding: 0,\r\n        border: '2px solid'\r\n    },\r\n    menu: {\r\n        '& .MuiMenu-paper': {\r\n            background: '#000',\r\n            opacity: '0.8!important',\r\n            color: '#aaa',\r\n            width: 260\r\n        }\r\n    },\r\n    divider: {\r\n        background: \"#999\"\r\n    },\r\n    firstItem: {\r\n        paddingTop: 0,\r\n        minHeight: 30\r\n    },\r\n    itemicon: {\r\n        minWidth: 30,\r\n        margin: 5\r\n    }\r\n})\r\n\r\nexport default function AccountMenu(props) {\r\n    console.log(\"Render AccountMenu\")\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n    const {accounts,currentAccount} = props\r\n    const choseAccount = (event) =>{\r\n        setAnchorEl(null)\r\n        props.choseAccount(event)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                className={classes.right}\r\n                aria-haspopup=\"true\"\r\n                aria-controls=\"simple-menu\"\r\n                onClick={handleClick}\r\n            >\r\n                {\r\n                    accounts[currentAccount].address ?\r\n                        <Jazzicon diameter={35} seed={jsNumberForAddress(accounts[currentAccount].address)} />\r\n                        :\r\n                        <AccountCircleIcon style={{ fontSize: 35 }} />\r\n                }\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                className={classes.menu}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose} className={classes.firstItem}>\r\n                    我的账户\r\n            </MenuItem>\r\n                <Divider className={classes.divider} />\r\n                {accounts.map((item, index) => {\r\n                    return (\r\n                        <MenuItem onClick={choseAccount} key={index} index={index}>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={2}>\r\n                                    <ListItemIcon className={classes.itemicon}>\r\n                                        <Jazzicon diameter={24} seed={jsNumberForAddress(item.address || '0x0')} />\r\n                                    </ListItemIcon>\r\n                                </Grid>\r\n                                <Grid item xs={10}>\r\n                                    <Grid container spacing={0}>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography noWrap>账户 {index + 1}&nbsp;&nbsp;<small><em>余额：{item.balance}</em></small></Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography noWrap>{item.address}</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Menu>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport AccountMenu from './AccountMenu'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        paddingRight: 24,\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        minWidth: 150,\r\n        background: '#d2d9f8',\r\n        borderRadius: '5px',\r\n        height: 40,\r\n        marginLeft: '-75px',\r\n        position: 'absolute',\r\n        top: '0px',\r\n        left: '50%',\r\n        '& .MuiSelect-filled.MuiSelect-filled': {\r\n            padding: 12\r\n        }\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    }\r\n}))\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            background: '#000',\r\n            opacity: '0.8',\r\n            color: '#aaa'\r\n        }\r\n    }\r\n}\r\nexport default function MyToolbar(props){\r\n    console.log(\"Render MyToolbar\")\r\n    const classes = useStyles()\r\n    const {networks, ...other} = props\r\n\r\n    const [networkId,setNetworkId] = React.useState(props.networkId)\r\n    const handleChange = (event) => {\r\n        setNetworkId(event.target.value)\r\n        props.getBalance(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"absolute\" className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.toggleDrawer(true)}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n\r\n                <FormControl variant=\"filled\" size={'small'} className={classes.formControl}>\r\n                    <Select\r\n                        disableUnderline={true}\r\n                        className={classes.select}\r\n                        MenuProps={MenuProps}\r\n                        displayEmpty\r\n                        value={networkId}\r\n                        defaultValue={networkId}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {networks.map((item, index) => {\r\n                            return (\r\n                                <MenuItem className={classes.menuitem} key={index} value={index}>{item.nameCN}</MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <AccountMenu networks={networks} {...other}></AccountMenu>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport BarChartIcon from '@material-ui/icons/BarChart'\r\nimport LayersIcon from '@material-ui/icons/Layers'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment'\r\nimport { Eth } from 'react-cryptocoins'\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <Eth />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"以太坊\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Orders\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Customers\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Reports\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <LayersIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Integrations\" />\r\n        </ListItem>\r\n    </div>\r\n)\r\n\r\nexport const secondaryListItems = (\r\n    <div>\r\n        <ListSubheader inset>Saved reports</ListSubheader>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Current month\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Last quarter\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n            <ListItemIcon>\r\n                <AssignmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Year-end sale\" />\r\n        </ListItem>\r\n    </div>\r\n)","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\nimport { mainListItems } from './ListItems'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\n\r\n\r\nconst drawerWidth = 200\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    h1: {\r\n        padding: '0px 10px',\r\n        lineHeight: '56px',\r\n        textAlign: 'center'\r\n    },\r\n    list: {\r\n        width: drawerWidth,\r\n    },\r\n}))\r\n\r\nexport default function MyDrawer(props) {\r\n    console.log(\"Render MyDrawer\")\r\n    const classes = useStyles()\r\n\r\n    const sideList = () => (\r\n        <Box\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={props.toggleDrawer(false)}\r\n            onKeyDown={props.toggleDrawer(false)}\r\n        >\r\n            <Box className={classes.toolbar} >\r\n                <Typography component=\"h1\" className={classes.h1}>\r\n                    打开钱包\r\n                </Typography>\r\n            </Box>\r\n            <Divider />\r\n            <List>{mainListItems}</List>\r\n        </Box>\r\n    )\r\n    return (\r\n        <SwipeableDrawer\r\n            open={props.open}\r\n            onClose={props.toggleDrawer(false)}\r\n            onOpen={props.toggleDrawer(true)}\r\n        >\r\n            {sideList('left')}\r\n        </SwipeableDrawer>\r\n    )\r\n}","export const networks = [\r\n    {\r\n        nameCN:\"以太坊主网络\",\r\n        nameEN:\"mainnet\",\r\n        id:1\r\n    },\r\n    {\r\n        nameCN:\"Ropsten测试网络\",\r\n        nameEN:\"ropsten\",\r\n        id:3\r\n    },\r\n    {\r\n        nameCN:\"Rinkeby测试网络\",\r\n        nameEN:\"rinkeby\",\r\n        id:4\r\n    },\r\n    // {\r\n    //     nameCN:\"Goeli测试网络\",\r\n    //     nameEN:\"goerli\",\r\n    //     id:5\r\n    // },\r\n    {\r\n        nameCN:\"Kovan测试网络\",\r\n        nameEN:\"kovan\",\r\n        id:42\r\n    },\r\n]","import React, { Fragment } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport { Eth } from 'react-cryptocoins'\r\nimport moment from \"moment\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding:0\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    mainItem:{\r\n        paddingTop:0\r\n    },\r\n    topItem:{\r\n        paddingBottom:0\r\n    },\r\n    listItem:{\r\n        '& span':{\r\n            lineHeight:'24px',\r\n            fontSize:'1rem'\r\n        },\r\n        '& div':{\r\n            width:50,\r\n            textAlign:'center',\r\n            fontSize:10,\r\n            height:20,\r\n            lineHeight:'16px',\r\n            marginTop:'8px'\r\n        }\r\n    },\r\n    status:{\r\n        background:theme.palette.success.main,\r\n        color:theme.palette.success.contrastText,\r\n        padding:'2px 4px',\r\n        borderRadius: 3,\r\n    },\r\n    statusError:{\r\n        background:theme.palette.error.main,\r\n        color:theme.palette.error.contrastText,\r\n        padding:'2px 4px',\r\n        borderRadius: 3,\r\n    },\r\n    listItemRight:{\r\n        lineHeight:'24px',\r\n        textAlign:'right'\r\n    },\r\n    value:{\r\n        fontSize: '1rem',\r\n        fontWeight:400\r\n    },\r\n    gasFee:{\r\n        lineHeight:'30px'\r\n    }\r\n}))\r\n\r\nexport default function TxList(props) {\r\n    const classes = useStyles()\r\n    const { txlist } = props\r\n\r\n    console.log(\"Render TxList\")\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {txlist.map((item, index) => {\r\n                return(\r\n                    <Fragment key={index}>\r\n                        <ListItem alignItems=\"flex-start\" className={classes.topItem}>\r\n                            <Typography\r\n                                variant=\"caption\"\r\n                                color=\"textPrimary\"\r\n                            >\r\n                                #{item.nonce} - {moment(parseInt(item.timeStamp)*1000).format('YYYY-MM-DD LT')}\r\n                            </Typography>\r\n                        </ListItem>\r\n                        <ListItem alignItems=\"flex-start\" className={classes.mainItem}>\r\n                            <ListItemAvatar>\r\n                                {item.to === '' ? \r\n                                    <Eth size={36}/>\r\n                                :\r\n                                    <Jazzicon diameter={36} seed={jsNumberForAddress(item.to)} />\r\n                                }\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={item.inputData}\r\n                                className={classes.listItem}\r\n                                secondary={\r\n                                    <Typography\r\n                                        component=\"div\"\r\n                                        color=\"success.main\"\r\n                                        className={item.isError === 1 ? classes.statusError : classes.status}\r\n                                    >\r\n                                        {item.isError === 1 ? `错误` : `确认`}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        className={classes.value}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {item.value}\r\n                                    </Typography>\r\n                                }\r\n                                className={classes.listItemRight}\r\n                                component=\"div\"\r\n                                secondary={\r\n                                    <Typography\r\n                                        variant=\"body2\"\r\n                                        className={classes.gasFee}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        交易费：{item.gasFee}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                        <Divider component=\"li\" />\r\n                    </Fragment>\r\n                )})\r\n            }\r\n        </List>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nvar QRCode = require('qrcode.react')\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function Deposit(props) {\r\n    const handleDepositClose = () => {\r\n        props.setDepositOpen(false)\r\n    }\r\n    const { currentAccount, address,depositOpen,classes} = props\r\n    return(\r\n        <Dialog\r\n                open={depositOpen}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleDepositClose}\r\n                aria-labelledby=\"deposit-dialog-slide-title\"\r\n                aria-describedby=\"deposit-dialog-slide-description\"\r\n                className={classes.DialogTitle}\r\n                fullWidth\r\n            >\r\n                <Jazzicon diameter={100} seed={jsNumberForAddress(address)} />\r\n                <DialogTitle id=\"deposit-dialog-slide-title\">\r\n                    账户 { parseInt(currentAccount) + 1}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"deposit-dialog-slide-description\">\r\n                        <QRCode value={`ethereum:` + address} size={200} />\r\n                    </DialogContentText>\r\n                    <CopyToClipboard text={address}>\r\n                        <Button className={classes.DialogActions}>\r\n                        <Typography noWrap>{address}</Typography>\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n                </DialogContent>\r\n                <DialogContent>\r\n                    <Button onClick={handleDepositClose} color=\"primary\" fullWidth variant='outlined'>\r\n                        关闭\r\n                    </Button>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                </DialogActions>\r\n            </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function Send(props) {\r\n\r\n    const { accounts,currentAccount, address,sendOpen,classes} = props\r\n\r\n    const handleSendClose = () => {\r\n        props.setSendOpen(false)\r\n    }\r\n    \r\n    const [sendValue, setSendValue] = React.useState(0)\r\n    const handleSetSendValue = (event) => {\r\n        setSendValue(event.target.value)\r\n    }\r\n\r\n    const [variant,setVariant] = React.useState(['outlined','contained','outlined'])\r\n    const [gasfee,setGasfee] = React.useState(0.00006)\r\n    console.log(gasfee)\r\n    const handleChoseGasfee = (event) =>{\r\n        const variant = ['outlined','outlined','outlined']\r\n        const index = event.currentTarget.attributes.index.nodeValue\r\n        const value = event.currentTarget.attributes.value.nodeValue\r\n        variant[index] = 'contained'\r\n        setVariant(variant)\r\n        setGasfee(value)\r\n    }\r\n    const [toAddress,setToAddress] = React.useState('')\r\n    const handleTypeAddress = (event) => {\r\n        setToAddress(event.target.value)\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={sendOpen}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleSendClose}\r\n            aria-labelledby=\"send-dialog-slide-title\"\r\n            aria-describedby=\"send-dialog-slide-description\"\r\n            className={classes.DialogTitle}\r\n            fullWidth\r\n        >\r\n            <Jazzicon diameter={100} seed={jsNumberForAddress(address)} />\r\n            <DialogTitle id=\"send-dialog-slide-title\">\r\n                <TextField\r\n                    label=\"输入以太坊地址\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Some important text\"\r\n                    fullWidth\r\n                    className={classes.TextField}\r\n                    onChange={handleTypeAddress}\r\n                    value={toAddress}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    label=\"发送数量\"\r\n                    variant=\"outlined\"\r\n                    helperText={`余额：`+accounts[currentAccount].balance+`Ether`}\r\n                    value={sendValue}\r\n                    onChange={handleSetSendValue}\r\n                    fullWidth\r\n                    className={classes.TextField}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                Ether\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </DialogContent>\r\n            <DialogContent>\r\n                <FormHelperText id=\"my-helper-text\" className={classes.selectGasfee}>选择交易费：</FormHelperText>\r\n                <ButtonGroup color=\"secondary\" fullWidth aria-label=\"large secondary button group\">\r\n                    <Button variant={variant[0]} onClick={handleChoseGasfee} value={0.00002} index={0}>慢：0.00002ETH</Button>\r\n                    <Button variant={variant[1]} onClick={handleChoseGasfee} value={0.00006} index={1}>平均：0.00006ETH</Button>\r\n                    <Button variant={variant[2]} onClick={handleChoseGasfee} value={0.00017} index={2}>快： 0.00017ETH </Button>\r\n                </ButtonGroup>\r\n            </DialogContent>\r\n            <Divider className={classes.divider} />\r\n            <DialogContent>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={3}>\r\n                        <Button onClick={handleSendClose} variant='outlined' fullWidth color=\"default\" className={classes.DialogActions}>\r\n                            关闭\r\n                    </Button>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Button onClick={handleSendClose} variant='contained' fullWidth color=\"primary\" className={classes.DialogActions}>\r\n                            下一步\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport ethereum from '../assets/images/ethereum.png'\r\nimport Button from '@material-ui/core/Button'\r\nimport PropTypes from 'prop-types'\r\nimport TxList from './TxList'\r\nimport Copyright from \"./Copyright\"\r\nimport Deposit from './Deposit'\r\nimport Send from './Send'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        background: props =>\r\n            props.color === 'red'\r\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        border: 0,\r\n        borderRadius: 5,\r\n        boxShadow: props =>\r\n            props.color === 'red'\r\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        color: 'white',\r\n        height: 40,\r\n        padding: '0 30px',\r\n        margin: 8,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        background: 'linear-gradient(45deg, #ffe1e0 30%, #ace8f6  90%)',\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    container: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    avatarBg: {\r\n        background: 'linear-gradient(135deg, #21CBF3 30%, #FE6B8B 90%)',\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n        boxShadow: '2px 2px 10px #666'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        background: '#fff',\r\n        width: theme.spacing(13),\r\n        height: theme.spacing(13),\r\n        '& img': {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10)\r\n        }\r\n    },\r\n    main: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& h3': {\r\n            marginBottom: theme.spacing(1),\r\n        }\r\n    },\r\n    sendBtn: {\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n        '& div': {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }\r\n    },\r\n    DialogTitle: {\r\n        textAlign: 'center',\r\n        '& .MuiDialog-paper': {\r\n            overflowY: 'unset'\r\n        },\r\n        '& .paper': {\r\n            position: 'absolute',\r\n            top: '-50px',\r\n            marginLeft: '50%!important',\r\n            left: '-50px'\r\n        },\r\n        '& .MuiDialogTitle-root': {\r\n            marginTop: 50,\r\n        }\r\n    },\r\n    DialogActions: {\r\n        width:'100%'\r\n    },\r\n    TextField: {\r\n        marginBottom: '10px'\r\n    },\r\n    selectGasfee:{\r\n        marginBottom:'10px'\r\n    },\r\n    divider: {\r\n        marginTop:'15px',\r\n        marginBottom:'15px'\r\n    },\r\n}))\r\n\r\nfunction MyButton(props) {\r\n    const { color, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <Button className={classes.root} {...other} />\r\n}\r\n\r\nMyButton.propTypes = {\r\n    color: PropTypes.oneOf(['blue', 'red']).isRequired,\r\n}\r\n\r\n\r\nexport default function AssetDetail(props) {\r\n    console.log(\"Render AssetDetail\")\r\n    const classes = useStyles()\r\n    const { accounts, currentAccount, ...other } = props\r\n    const address = accounts[currentAccount].address\r\n\r\n    \r\n    const [depositOpen, setDepositOpen] = React.useState(false)\r\n    const handleDepositOpen = () => {\r\n        setDepositOpen(true)\r\n    }\r\n\r\n    const [sendOpen, setSendOpen] = React.useState(false)\r\n    const handleSendOpen = () => {\r\n        setSendOpen(true)\r\n    }\r\n\r\n    //https://faucet.ropsten.be/donate/0x319a0cfD7595b0085fF6003643C7eD685269F851\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Box className={classes.main}>\r\n                            <Avatar className={classes.avatarBg}>\r\n                                <Avatar className={classes.avatar} src={ethereum}>\r\n                                </Avatar>\r\n                            </Avatar>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Typography variant=\"h3\">\r\n                                {Math.round(accounts[currentAccount].balance * 10000) / 10000}ETH\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                {address}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Grid container className={classes.sendBtn}>\r\n                                <Grid item xs={6}>\r\n                                    <MyButton color=\"red\" onClick={handleDepositOpen}>存入</MyButton>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <MyButton color=\"blue\" onClick={handleSendOpen}>发送</MyButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Box className={classes.main}>\r\n                            <Grid container>\r\n                                <TxList {...other} accounts={accounts} currentAccount={currentAccount}></TxList>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n            <Deposit \r\n                {...other} \r\n                address={address} \r\n                currentAccount={currentAccount} \r\n                depositOpen={depositOpen} \r\n                setDepositOpen={setDepositOpen}\r\n                classes={classes}\r\n            ></Deposit>\r\n            <Send \r\n                {...other} \r\n                address={address} \r\n                currentAccount={currentAccount} \r\n                setSendOpen={setSendOpen}\r\n                sendOpen={sendOpen}\r\n                accounts={accounts}\r\n                classes={classes}\r\n            ></Send>\r\n        </main>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport cookie from 'react-cookies'\r\nimport Toolbar from './components/Toolbar'\r\nimport MyDrawer from './components/MyDrawer'\r\nimport { networks } from './utils/networks'\r\nimport AssetDetail from './components/AssetDetail'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport { mnemonicToAddress, getTxList } from './utils/Tools'\r\nimport { validatePasswordMnemonic, getAccounts } from './utils/Tools'\r\n\r\nconst createInfuraProvider = require('eth-json-rpc-infura/src/createProvider')\r\nconst Ethjs = require('ethjs')\r\nconst web3 = new Web3()\r\n\r\nclass Wallet extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let password = cookie.load('password')\r\n        let networkId = cookie.load('networkId')\r\n        let currentAccount = cookie.load('currentAccount')\r\n        let encrypt = localStorage.getItem(\"encrypt\")\r\n        let mnemonic = validatePasswordMnemonic(password, encrypt)\r\n        let expires = new Date()\r\n        expires = expires.setDate(Date.now() + 1000 * 60 * 60 * 24)\r\n\r\n        if (!mnemonic) {\r\n            window.location.href = \"./\"\r\n        }\r\n\r\n        this.state = {\r\n            open: false,\r\n            password: '',\r\n            accounts: getAccounts(mnemonic),\r\n            networks: networks,\r\n            avatarMenu: null,\r\n            mnemonic: mnemonic,\r\n            currentAccount: currentAccount || 0,\r\n            networkId: networkId || 0,\r\n            txlist: [],\r\n            expires: expires\r\n        }\r\n    }\r\n\r\n    toggleDrawer = () => event => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return\r\n        }\r\n        let open = this.state.open\r\n        this.setState({ open: !open })\r\n    }\r\n    componentDidMount() {\r\n        this.getBalance(this.state.networkId)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.currentAccount !== this.state.currentAccount\r\n            || nextState.accounts !== this.state.accounts\r\n            || nextState.txlist !== this.state.txlist\r\n            || nextState.open !== this.state.open\r\n            || nextState.networkId !== this.state.networkId\r\n    }\r\n    getBalance = (networkId) => {\r\n        let accounts = []\r\n        let mnemonic = this.state.mnemonic\r\n        let that = this\r\n        let networkName = this.state.networks[networkId].nameEN\r\n        let provider = createInfuraProvider({ network: networkName })\r\n        let eth = new Ethjs(provider)\r\n        this.setState({ txlist: [] })\r\n        for (let i = 0; i < 10; i++) {\r\n            let address = mnemonicToAddress(mnemonic, i)\r\n            eth.getBalance(address).then(function (res) {\r\n                let balance = web3.utils.fromWei(res, 'ether').toString()\r\n                accounts[i] = {\r\n                    address: address,\r\n                    balance: balance\r\n                }\r\n                if (accounts.length === 10) {\r\n                    that.setState({ accounts: accounts, networkId: networkId })\r\n                    cookie.save('networkId', networkId, { path: '/', expires: that.state.expires })\r\n                    that.getTxList(that.state.currentAccount)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    getTxList = (currentAccount) => {\r\n        try {\r\n            let networkName = this.state.networks[this.state.networkId].nameEN\r\n            let address = this.state.accounts[currentAccount].address\r\n            let that = this\r\n            getTxList(networkName, address).then(function (result) {\r\n                that.setState({ txlist: result })\r\n                console.log(\"TCL: Wallet -> getTxList -> result\", result)\r\n            })\r\n        } catch (e) {\r\n            getTxList(currentAccount)\r\n        }\r\n    }\r\n    choseAccount = (event) => {\r\n        let accountsIndex = event.currentTarget.attributes.index.nodeValue\r\n        cookie.save('currentAccount', accountsIndex, { path: '/', expires: this.state.expires })\r\n        this.setState({ currentAccount: accountsIndex })\r\n        this.getTxList(accountsIndex)\r\n    }\r\n    render() {\r\n        console.log(\"Render Wallet\")\r\n        return (\r\n            <div style={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <Toolbar\r\n                    toggleDrawer={this.toggleDrawer}\r\n                    getBalance={this.getBalance}\r\n                    networks={this.state.networks}\r\n                    networkId={this.state.networkId}\r\n                    accounts={this.state.accounts}\r\n                    mnemonic={this.state.mnemonic}\r\n                    currentAccount={this.state.currentAccount}\r\n                    choseAccount={this.choseAccount}\r\n                ></Toolbar>\r\n                <MyDrawer\r\n                    toggleDrawer={this.toggleDrawer}\r\n                    open={this.state.open}\r\n                ></MyDrawer>\r\n                <AssetDetail\r\n                    txlist={this.state.txlist}\r\n                    accounts={this.state.accounts}\r\n                    currentAccount={this.state.currentAccount}\r\n                ></AssetDetail>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wallet","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport OpenWallet from './OpenWallet'\nimport CreateWallet from './CreateWallet'\nimport Mnemonic from './Mnemonic'\nimport ImportWallet from './ImportWallet'\nimport Wallet from './Wallet'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    static getDerivedStateFromProps(props, state) { // 组件每次被rerender的时候，包括在组件构建之后(虚拟dom之后，实际dom挂载之前)，每次获取新的props或state之后；; \n        return true\n    }\n    componentDidCatch(error, info) { // 获取到javascript错误\n    }\n\n    render() {\n        let pathname = window.location.pathname.split(\"/\")\n        return (\n            <Router basename={pathname[1]}>\n                <div>\n                    <Route exact path=\"/\" component={OpenWallet} />\n                    <Route path=\"/Mnemonic\" component={Mnemonic} />\n                    <Route path=\"/CreateWallet\" component={CreateWallet} />\n                    <Route path=\"/ImportWallet\" component={ImportWallet} />\n                    <Route path=\"/Wallet\" component={Wallet} />\n                </div>\n            </Router>\n        )\n    }\n    componentDidMount() { // 挂载后\n\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.accounts !== this.state.accounts\n    }\n    getSnapshotBeforeUpdate(prevProps, prevState) { // 组件更新前触发\n        return null\n    }\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n    componentWillUnmount() { // 组件卸载时触发\n\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            light: '#ff4081',\n            main: '#f50057',\n            dark: \"#c51162\",\n            contrastText: '#ffffff',\n        },\n        default: {\n            light: '#ffd54f',\n            main: '#ffc107',\n            dark: \"#ffa000\",\n            contrastText: 'rgba(0, 0, 0, 0.7)',\n        },\n        success: {\n            light: '#81c784',\n            main: '#4caf50',\n            dark: \"#388e3c\",\n            contrastText: 'rgba(0, 0, 0, 0.7)',\n        },\n        Warning:{\n            light: '#ffb74d',\n            main: '#ff9800',\n            dark: \"#f57c00\",\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: \"#d32f2f\",\n            contrastText: '#fff',\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n    typography: {\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        fontSize: 12,\n    }\n})\n\nexport default theme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/bgImg.b6c409a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ethereum.1909e591.png\";"],"sourceRoot":""}